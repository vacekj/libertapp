{"version":3,"sources":["nft/components/sell/select/SelectPage.tsx","nft/components/sell/list/ListPage.tsx","nft/components/common/Loading/LoadingSparkle.css.ts","nft/components/common/Loading/LoadingSparkle.tsx","nft/components/common/SortDropdown/SortDropdown.tsx","nft/components/common/SortDropdown/SortDropdown.css.ts","nft/components/layout/Checkbox.tsx","nft/components/layout/Checkbox.css.ts","nft/components/sell/select/SelectPage.css.ts","nft/components/sell/select/FilterSidebar.tsx","nft/pages/sell/sell.tsx","nft/pages/sell/sell.css.ts"],"names":["SortBy","ListPage","path","LoadingSparkle","width","height","viewBox","fill","xmlns","d","themeVars","colors","darkGray","className","styles","SortDropdown","dropDownOptions","inFilters","mini","miniPrompt","top","left","useReducer","s","isOpen","toggleOpen","isReversed","toggleReversed","useState","selectedIndex","setSelectedIndex","maxWidth","setMaxWidth","ref","useRef","useOnClickOutside","useEffect","reversable","useMemo","reverseOnClick","reverseIndex","Box","transition","borderRadius","borderBottomLeftRadius","undefined","borderBottomRightRadius","style","as","fontSize","borderStyle","background","borderColor","borderWidth","padding","color","whiteSpace","display","justifyContent","alignItems","onClick","cursor","clsx","e","stopPropagation","marginLeft","marginRight","buttonTextMedium","displayText","secondaryColor","blackBlue","secondaryWidth","secondaryHeight","transform","position","zIndex","right","paddingBottom","borderTopLeftRadius","borderTopRightRadius","overflowY","visibility","marginTop","map","option","index","reduce","acc","curr","length","DropDownItem","border","paddingTop","paddingLeft","paddingRight","default","hover","icon","LargestItem","maxWidthRef","useLayoutEffect","current","Math","ceil","getBoundingClientRect","Checkbox","hovered","children","props","overflow","lineHeight","checked","type","buttonSelected","FilterSidebar","collectionFilters","useWalletCollections","state","setCollectionFilters","walletCollections","listFilter","setListFilter","useFiltersExpanded","isFiltersExpanded","setFiltersExpanded","isMobile","useIsMobile","sidebarX","useSpring","sm","md","interpolate","x","headlineSmall","backgroundColor","gap","flexWrap","collections","CollectionSelect","collectionSearchText","setCollectionSearchText","displayCollections","setDisplayCollections","filtered","filter","collection","name","toLowerCase","includes","marginBottom","maxHeight","scrollbarWidth","CollectionFilterSearch","focus","placeholder","value","onChange","currentTarget","CollectionItem","isCheckboxSelected","setCheckboxSelected","toggleHovered","isChecked","useCallback","address","some","handleCheckbox","onMouseEnter","onMouseLeave","src","image","count","statusArray","ListStatusFilterButtons","buttonTextSmall","formatEth","price","round","Number","EPSILON","SelectPage","useWalletBalance","clearCollectionFilters","ownerCollections","useQuery","OSCollectionsFetcher","params","asset_owner","offset","limit","refetchOnWindowFocus","data","ownerCollectionsAddresses","collectionStats","fetchMultipleCollectionStats","addresses","useInfiniteQuery","a","pageParam","fetchWalletAssets","ownerAddress","collectionAddresses","getNextPageParam","lastPage","pages","flat","refetchOnMount","ownerAssetsData","fetchNextPage","hasNextPage","isSuccess","ownerAssets","walletAssets","setWalletAssets","displayAssets","setDisplayAssets","setWalletCollections","sellAssets","useSellAsset","reset","setSellPageState","useSellPageState","DateAcquired","sortBy","setSortBy","orderByASC","setOrderBy","searchText","setSearchText","asset","ownerCollectionsCopy","n","floorPrice","find","stat","pow","sorted","FloorPrice","sort","b","LastPrice","lastPrice","DateCreated","Date","asset_contract","created_date","getTime","date_acquired","DateListed","listing_date","gridX","gridWidthOffset","sortDropDownOptions","vars","blue400","flexShrink","FilterButton","results","next","hasMore","loader","dataLength","assetList","bottom","paddingX","paddingY","subhead","fontWeight","SellPageStateType","LISTING","WalletAssetDisplay","selectSellAsset","removeSellAsset","cartExpanded","useBag","bagExpanded","toggleCart","toggleBag","boxHovered","toggleBoxHovered","buttonHovered","toggleButtonHovered","isSelected","item","id","to","tokenId","textDecoration","subheadSmall","alt","image_url","aspectRatio","textOverflow","collectionIsVerified","textAlign","preventDefault","SelectAllButton","isAllSelected","setIsAllSelected","resetSellAssets","forEach","flexDirection","CollectionFiltersRow","getCollection","collectionAddress","CollectionFilterItem","CollectionSearch","Sell","sellPageState","removeAllMarketplaceWarnings","setListingStatus","useNFTList","navigate","useNavigate","ListingStatus","DEFINED","account","useWeb3React","toggleWalletModal","useToggleWalletModal","SELECTING","minHeight","header2","buttonMedium"],"mappings":"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","file":"static/js/7.746d64ba.chunk.js","sourcesContent":["import clsx from 'clsx'\nimport { AnimatedBox, Box } from 'nft/components/Box'\nimport { assetList } from 'nft/components/collection/CollectionNfts.css'\nimport { FilterButton } from 'nft/components/collection/FilterButton'\nimport { LoadingSparkle } from 'nft/components/common/Loading/LoadingSparkle'\nimport { SortDropdown } from 'nft/components/common/SortDropdown'\nimport { Center, Column, Row } from 'nft/components/Flex'\nimport {\n  BagFillIcon,\n  ClockIconFilled,\n  CrossIcon,\n  NonRarityIconFilled,\n  PaintPaletteIconFilled,\n  TagFillIcon,\n  VerifiedIcon,\n} from 'nft/components/icons'\nimport { FilterSidebar } from 'nft/components/sell/select/FilterSidebar'\nimport { subhead, subheadSmall } from 'nft/css/common.css'\nimport { vars } from 'nft/css/sprinkles.css'\nimport {\n  useBag,\n  useFiltersExpanded,\n  useIsMobile,\n  useSellAsset,\n  useSellPageState,\n  useWalletBalance,\n  useWalletCollections,\n} from 'nft/hooks'\nimport { fetchMultipleCollectionStats, fetchWalletAssets, OSCollectionsFetcher } from 'nft/queries'\nimport { DropDownOption, SellPageStateType, WalletAsset, WalletCollection } from 'nft/types'\nimport { Dispatch, FormEvent, SetStateAction, useEffect, useMemo, useReducer, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useInfiniteQuery, useQuery } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport { useSpring } from 'react-spring/web'\n\nimport * as styles from './SelectPage.css'\n\nenum SortBy {\n  FloorPrice,\n  LastPrice,\n  DateAcquired,\n  DateCreated,\n  DateListed,\n}\n\nconst formatEth = (price: number) => {\n  if (price > 1000000) {\n    return `${Math.round(price / 1000000)}M`\n  } else if (price > 1000) {\n    return `${Math.round(price / 1000)}K`\n  } else {\n    return `${Math.round(price * 100 + Number.EPSILON) / 100}`\n  }\n}\n\nfunction roundFloorPrice(price?: number, n?: number) {\n  return price ? Math.round(price * Math.pow(10, n ?? 3) + Number.EPSILON) / Math.pow(10, n ?? 3) : 0\n}\n\nexport const SelectPage = () => {\n  const { address } = useWalletBalance()\n  const collectionFilters = useWalletCollections((state) => state.collectionFilters)\n  const setCollectionFilters = useWalletCollections((state) => state.setCollectionFilters)\n  const clearCollectionFilters = useWalletCollections((state) => state.clearCollectionFilters)\n\n  const { data: ownerCollections } = useQuery(\n    ['ownerCollections', address],\n    () => OSCollectionsFetcher({ params: { asset_owner: address, offset: '0', limit: '300' } }),\n    {\n      refetchOnWindowFocus: false,\n    }\n  )\n\n  const ownerCollectionsAddresses = useMemo(() => ownerCollections?.map(({ address }) => address), [ownerCollections])\n  const { data: collectionStats } = useQuery(\n    ['ownerCollectionStats', ownerCollectionsAddresses],\n    () => fetchMultipleCollectionStats({ addresses: ownerCollectionsAddresses ?? [] }),\n    {\n      refetchOnWindowFocus: false,\n    }\n  )\n\n  const {\n    data: ownerAssetsData,\n    fetchNextPage,\n    hasNextPage,\n    isSuccess,\n  } = useInfiniteQuery(\n    ['ownerAssets', address, collectionFilters],\n    async ({ pageParam = 0 }) => {\n      return await fetchWalletAssets({\n        ownerAddress: address ?? '',\n        collectionAddresses: collectionFilters,\n        pageParam,\n      })\n    },\n    {\n      getNextPageParam: (lastPage, pages) => {\n        return lastPage?.flat().length === 25 ? pages.length : null\n      },\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n    }\n  )\n\n  const ownerAssets = useMemo(() => (isSuccess ? ownerAssetsData?.pages.flat() : null), [isSuccess, ownerAssetsData])\n\n  const walletAssets = useWalletCollections((state) => state.walletAssets)\n  const setWalletAssets = useWalletCollections((state) => state.setWalletAssets)\n  const displayAssets = useWalletCollections((state) => state.displayAssets)\n  const setDisplayAssets = useWalletCollections((state) => state.setDisplayAssets)\n  const walletCollections = useWalletCollections((state) => state.walletCollections)\n  const setWalletCollections = useWalletCollections((state) => state.setWalletCollections)\n  const listFilter = useWalletCollections((state) => state.listFilter)\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const reset = useSellAsset((state) => state.reset)\n  const setSellPageState = useSellPageState((state) => state.setSellPageState)\n  const [sortBy, setSortBy] = useState(SortBy.DateAcquired)\n  const [orderByASC, setOrderBy] = useState(true)\n  const [searchText, setSearchText] = useState('')\n  const [isFiltersExpanded, setFiltersExpanded] = useFiltersExpanded()\n  const isMobile = useIsMobile()\n\n  useEffect(() => {\n    setWalletAssets(ownerAssets?.flat() ?? [])\n  }, [ownerAssets, setWalletAssets])\n\n  useEffect(() => {\n    ownerCollections && setWalletCollections(ownerCollections)\n  }, [ownerCollections, setWalletCollections])\n\n  useEffect(() => {\n    if (searchText) {\n      const filtered = walletAssets.filter((asset) => asset.name?.toLowerCase().includes(searchText.toLowerCase()))\n      setDisplayAssets(filtered, listFilter)\n    } else {\n      setDisplayAssets(walletAssets, listFilter)\n    }\n  }, [searchText, walletAssets, listFilter, setDisplayAssets])\n\n  useEffect(() => {\n    if (ownerCollections?.length && collectionStats?.length) {\n      const ownerCollectionsCopy = [...ownerCollections]\n      for (const collection of ownerCollectionsCopy) {\n        const floorPrice = collectionStats.find((stat) => stat.address === collection.address)?.floorPrice\n        collection.floorPrice = roundFloorPrice(floorPrice)\n      }\n      setWalletCollections(ownerCollectionsCopy)\n    }\n  }, [collectionStats, ownerCollections, setWalletCollections])\n\n  useEffect(() => {\n    const sorted = displayAssets && [...displayAssets]\n    if (sortBy === SortBy.FloorPrice && orderByASC) sorted?.sort((a, b) => (b.floorPrice || 0) - (a.floorPrice || 0))\n    else if (sortBy === SortBy.FloorPrice && !orderByASC)\n      sorted?.sort((a, b) => (a.floorPrice || 0) - (b.floorPrice || 0))\n    else if (sortBy === SortBy.LastPrice && orderByASC) sorted?.sort((a, b) => b.lastPrice - a.lastPrice)\n    else if (sortBy === SortBy.LastPrice && !orderByASC) sorted?.sort((a, b) => a.lastPrice - b.lastPrice)\n    else if (sortBy === SortBy.DateCreated && orderByASC)\n      sorted?.sort(\n        (a, b) => new Date(a.asset_contract.created_date).getTime() - new Date(b.asset_contract.created_date).getTime()\n      )\n    else if (sortBy === SortBy.DateCreated && !orderByASC)\n      sorted?.sort(\n        (a, b) => new Date(b.asset_contract.created_date).getTime() - new Date(a.asset_contract.created_date).getTime()\n      )\n    else if (sortBy === SortBy.DateAcquired && orderByASC)\n      sorted?.sort((a, b) => new Date(a.date_acquired).getTime() - new Date(b.date_acquired).getTime())\n    else if (sortBy === SortBy.DateAcquired && !orderByASC)\n      sorted?.sort((a, b) => new Date(b.date_acquired).getTime() - new Date(a.date_acquired).getTime())\n    else if (sortBy === SortBy.DateListed && orderByASC) sorted?.sort((a, b) => +b.listing_date - +a.listing_date)\n    else if (sortBy === SortBy.DateListed && !orderByASC) sorted?.sort((a, b) => +a.listing_date - +b.listing_date)\n    setDisplayAssets(sorted, listFilter)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy, orderByASC, listFilter])\n\n  useEffect(() => {\n    if (ownerCollections?.length && collectionStats?.length) {\n      const ownerCollectionsCopy = [...ownerCollections]\n      for (const collection of ownerCollectionsCopy) {\n        const floorPrice = collectionStats.find((stat) => stat.address === collection.address)?.floorPrice\n        collection.floorPrice = floorPrice ? Math.round(floorPrice * 1000 + Number.EPSILON) / 1000 : 0 //round to at most 3 digits\n      }\n      setWalletCollections(ownerCollectionsCopy)\n    }\n  }, [collectionStats, ownerCollections, setWalletCollections])\n\n  const { gridX, gridWidthOffset } = useSpring({\n    gridX: isFiltersExpanded ? 300 : -16,\n    gridWidthOffset: isFiltersExpanded ? 300 /* right padding */ : 0,\n  })\n\n  const sortDropDownOptions: DropDownOption[] = useMemo(\n    () => [\n      {\n        displayText: 'Floor price',\n        onClick: () => {\n          setOrderBy(false)\n          setSortBy(SortBy.FloorPrice)\n        },\n        icon: <NonRarityIconFilled width=\"28\" height=\"28\" color={vars.color.blue400} />,\n        reverseOnClick: () => setOrderBy(!orderByASC),\n      },\n      {\n        displayText: 'Last price',\n        onClick: () => {\n          setOrderBy(false)\n          setSortBy(SortBy.LastPrice)\n        },\n        icon: <ClockIconFilled width=\"28\" height=\"28\" />,\n        reverseOnClick: () => setOrderBy(!orderByASC),\n      },\n      {\n        displayText: 'Date acquired',\n        onClick: () => {\n          setOrderBy(false)\n          setSortBy(SortBy.DateAcquired)\n        },\n        icon: <BagFillIcon width=\"28\" height=\"28\" color={vars.color.blue400} />,\n        reverseOnClick: () => setOrderBy(!orderByASC),\n      },\n      {\n        displayText: 'Date created',\n        onClick: () => {\n          setOrderBy(false)\n          setSortBy(SortBy.DateCreated)\n        },\n        icon: <PaintPaletteIconFilled width=\"28\" height=\"28\" color={vars.color.blue400} />,\n        reverseOnClick: () => setOrderBy(!orderByASC),\n      },\n      {\n        displayText: 'Date listed',\n        onClick: () => {\n          setOrderBy(false)\n          setSortBy(SortBy.DateListed)\n        },\n        icon: <TagFillIcon width=\"28\" height=\"28\" color={vars.color.blue400} />,\n        reverseOnClick: () => setOrderBy(!orderByASC),\n      },\n    ],\n    [orderByASC]\n  )\n\n  const SortWalletAssetsDropdown = () => <SortDropdown dropDownOptions={sortDropDownOptions} />\n\n  return (\n    <Column width=\"full\">\n      <Row\n        alignItems=\"flex-start\"\n        position=\"relative\"\n        paddingLeft={{ sm: '16', md: '52' }}\n        paddingRight={{ sm: '0', md: '72' }}\n        paddingTop={{ sm: '16', md: '40' }}\n      >\n        <FilterSidebar SortDropdown={SortWalletAssetsDropdown} />\n\n        {(!isMobile || !isFiltersExpanded) && (\n          // @ts-ignore\n          <AnimatedBox\n            paddingLeft={isFiltersExpanded ? '24' : '16'}\n            flexShrink=\"0\"\n            style={{\n              transform: gridX.interpolate(\n                (x) => `translate(${Number(x) - (!isMobile && isFiltersExpanded ? 300 : 0)}px)`\n              ),\n              width: gridWidthOffset.interpolate((x) => `calc(100% - ${x}px)`),\n            }}\n          >\n            <Row gap=\"8\" flexWrap=\"nowrap\">\n              <FilterButton\n                isMobile={isMobile}\n                isFiltersExpanded={isFiltersExpanded}\n                results={displayAssets.length}\n                onClick={() => setFiltersExpanded(!isFiltersExpanded)}\n              />\n              {!isMobile && <SortDropdown dropDownOptions={sortDropDownOptions} />}\n              <CollectionSearch searchText={searchText} setSearchText={setSearchText} />\n              <SelectAllButton />\n            </Row>\n            <Row>\n              <CollectionFiltersRow\n                collections={walletCollections}\n                collectionFilters={collectionFilters}\n                setCollectionFilters={setCollectionFilters}\n                clearCollectionFilters={clearCollectionFilters}\n              />\n            </Row>\n            <InfiniteScroll\n              next={fetchNextPage}\n              hasMore={hasNextPage ?? false}\n              loader={\n                hasNextPage ? (\n                  <Center>\n                    <LoadingSparkle />\n                  </Center>\n                ) : null\n              }\n              dataLength={displayAssets.length}\n              style={{ overflow: 'unset' }}\n            >\n              <div className={assetList}>\n                {displayAssets && displayAssets.length\n                  ? displayAssets.map((asset, index) => <WalletAssetDisplay asset={asset} key={index} />)\n                  : null}\n              </div>\n            </InfiniteScroll>\n          </AnimatedBox>\n        )}\n      </Row>\n      {sellAssets.length > 0 && (\n        <Row\n          display={{ sm: 'flex', md: 'none' }}\n          position=\"fixed\"\n          bottom=\"24\"\n          left=\"16\"\n          height=\"56\"\n          borderRadius=\"12\"\n          paddingX=\"16\"\n          paddingY=\"12\"\n          style={{ background: '#0d0e0ef2', width: 'calc(100% - 32px)', lineHeight: '24px' }}\n          className={subhead}\n        >\n          {sellAssets.length}&nbsp; selected item{sellAssets.length === 1 ? '' : 's'}\n          <Box\n            fontWeight=\"semibold\"\n            fontSize=\"14\"\n            cursor=\"pointer\"\n            color=\"genieBlue\"\n            marginRight=\"20\"\n            marginLeft=\"auto\"\n            onClick={reset}\n            lineHeight=\"16\"\n          >\n            Clear\n          </Box>\n          <Box\n            marginRight=\"0\"\n            fontWeight=\"medium\"\n            fontSize=\"14\"\n            cursor=\"pointer\"\n            backgroundColor=\"genieBlue\"\n            onClick={() => setSellPageState(SellPageStateType.LISTING)}\n            lineHeight=\"16\"\n            borderRadius=\"12\"\n            padding=\"8\"\n          >\n            Continue\n          </Box>\n        </Row>\n      )}\n    </Column>\n  )\n}\n\nexport const WalletAssetDisplay = ({ asset }: { asset: WalletAsset }) => {\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const selectSellAsset = useSellAsset((state) => state.selectSellAsset)\n  const removeSellAsset = useSellAsset((state) => state.removeSellAsset)\n  const cartExpanded = useBag((state) => state.bagExpanded)\n  const toggleCart = useBag((state) => state.toggleBag)\n  const isMobile = useIsMobile()\n\n  const [boxHovered, toggleBoxHovered] = useReducer((state) => {\n    return !state\n  }, false)\n  const [buttonHovered, toggleButtonHovered] = useReducer((state) => {\n    return !state\n  }, false)\n\n  const isSelected = useMemo(() => {\n    return sellAssets.some((item) => asset.id === item.id)\n  }, [asset, sellAssets])\n\n  const handleSelect = () => {\n    isSelected ? removeSellAsset(asset) : selectSellAsset(asset)\n    if (\n      !cartExpanded &&\n      !sellAssets.find(\n        (x) => x.tokenId === asset.tokenId && x.asset_contract.address === asset.asset_contract.address\n      ) &&\n      !isMobile\n    )\n      toggleCart()\n  }\n\n  return (\n    <Link\n      to={`/nfts/asset/${asset.asset_contract.address}/${asset.tokenId}?origin=sell`}\n      style={{ textDecoration: 'none' }}\n    >\n      <Column\n        color={'blackBlue'}\n        className={subheadSmall}\n        onMouseEnter={toggleBoxHovered}\n        onMouseLeave={toggleBoxHovered}\n      >\n        <Box\n          as=\"img\"\n          alt={asset.name}\n          width=\"full\"\n          borderTopLeftRadius=\"20\"\n          borderTopRightRadius=\"20\"\n          src={asset.image_url || '/nft/svgs/image-placeholder.svg'}\n          style={{ aspectRatio: '1' }}\n        />\n        <Column\n          position=\"relative\"\n          borderBottomLeftRadius=\"20\"\n          borderBottomRightRadius=\"20\"\n          transition=\"250\"\n          backgroundColor={boxHovered ? 'medGray' : 'lightGray'}\n          paddingY=\"12\"\n          paddingX=\"12\"\n        >\n          <Box className={subheadSmall} overflow=\"hidden\" textOverflow=\"ellipsis\" marginTop=\"4\" lineHeight=\"20\">\n            {asset.name ? asset.name : `#${asset.tokenId}`}\n          </Box>\n          <Box fontSize=\"12\" marginTop=\"4\" lineHeight=\"16\" overflow=\"hidden\" textOverflow=\"ellipsis\">\n            {asset.collection?.name}\n            {asset.collectionIsVerified ? <VerifiedIcon className={styles.verifiedBadge} /> : null}\n          </Box>\n          <Box as=\"span\" fontSize=\"12\" lineHeight=\"16\" color=\"darkGray\" marginTop=\"8\">\n            Last:&nbsp;\n            {asset.lastPrice ? (\n              <>\n                {formatEth(asset.lastPrice)}\n                &nbsp;ETH\n              </>\n            ) : (\n              <Box as=\"span\" marginLeft=\"6\">\n                &mdash;\n              </Box>\n            )}\n          </Box>\n          <Box as=\"span\" fontSize=\"12\" lineHeight=\"16\" color=\"darkGray\" marginTop=\"4\">\n            Floor:&nbsp;\n            {asset.floorPrice ? (\n              <>\n                {formatEth(asset.floorPrice)}\n                &nbsp;ETH\n              </>\n            ) : (\n              <Box as=\"span\" marginLeft=\"8\">\n                &mdash;\n              </Box>\n            )}\n          </Box>\n          <Box\n            marginTop=\"12\"\n            textAlign=\"center\"\n            width=\"full\"\n            borderRadius=\"12\"\n            paddingY=\"8\"\n            transition=\"250\"\n            color={buttonHovered ? 'blackBlue' : isSelected ? 'red400' : 'genieBlue'}\n            backgroundColor={buttonHovered ? (isSelected ? 'red400' : 'genieBlue') : 'lightGray'}\n            className={subheadSmall}\n            onMouseEnter={toggleButtonHovered}\n            onMouseLeave={toggleButtonHovered}\n            onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              handleSelect()\n            }}\n          >\n            {isSelected ? 'Remove' : 'Select'}\n          </Box>\n        </Column>\n      </Column>\n    </Link>\n  )\n}\n\nconst SelectAllButton = () => {\n  const [isAllSelected, setIsAllSelected] = useState(false)\n  const displayAssets = useWalletCollections((state) => state.displayAssets)\n  const selectSellAsset = useSellAsset((state) => state.selectSellAsset)\n  const resetSellAssets = useSellAsset((state) => state.reset)\n\n  useEffect(() => {\n    if (isAllSelected) {\n      displayAssets.forEach((asset) => selectSellAsset(asset))\n    } else {\n      resetSellAssets()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAllSelected, resetSellAssets, selectSellAsset])\n\n  const toggleAllSelected = () => {\n    setIsAllSelected(!isAllSelected)\n  }\n  return (\n    <Box\n      display=\"flex\"\n      flexShrink=\"0\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      marginLeft={{ sm: '8', md: 'auto' }}\n      borderRadius=\"12\"\n      backgroundColor=\"medGray\"\n      fontWeight=\"medium\"\n      height=\"44\"\n      paddingTop=\"12\"\n      paddingBottom=\"12\"\n      paddingRight=\"16\"\n      paddingLeft=\"16\"\n      cursor=\"pointer\"\n      color=\"blackBlue\"\n      onClick={toggleAllSelected}\n      className={clsx(`${subheadSmall} ${isAllSelected ? styles.buttonSelected : null}`)}\n    >\n      {isAllSelected ? 'Deselect all' : 'Select all'}\n    </Box>\n  )\n}\n\nconst CollectionFiltersRow = ({\n  collections,\n  collectionFilters,\n  setCollectionFilters,\n  clearCollectionFilters,\n}: {\n  collections: WalletCollection[]\n  collectionFilters: Array<string>\n  setCollectionFilters: (address: string) => void\n  clearCollectionFilters: Dispatch<SetStateAction<void>>\n}) => {\n  const getCollection = (collectionAddress: string) => {\n    return collections?.find((collection) => collection.address === collectionAddress)\n  }\n  return (\n    <Row paddingTop=\"18\" gap=\"8\" flexWrap=\"wrap\">\n      {collectionFilters &&\n        collectionFilters.map((collectionAddress, index) => (\n          <CollectionFilterItem\n            collection={getCollection(collectionAddress)}\n            key={index}\n            setCollectionFilters={setCollectionFilters}\n          />\n        ))}\n      {collectionFilters?.length ? (\n        <Box\n          as=\"button\"\n          paddingLeft=\"8\"\n          paddingRight=\"8\"\n          color=\"genieBlue\"\n          background=\"none\"\n          fontSize=\"16\"\n          border=\"none\"\n          cursor=\"pointer\"\n          onClick={() => clearCollectionFilters()}\n        >\n          Clear all\n        </Box>\n      ) : null}\n    </Row>\n  )\n}\n\nconst CollectionFilterItem = ({\n  collection,\n  setCollectionFilters,\n}: {\n  collection: WalletCollection | undefined\n  setCollectionFilters: (address: string) => void\n}) => {\n  if (!collection) return null\n  return (\n    <Row\n      justifyContent=\"center\"\n      paddingRight=\"4\"\n      paddingTop=\"4\"\n      paddingBottom=\"4\"\n      paddingLeft=\"8\"\n      borderRadius=\"12\"\n      background=\"medGray\"\n      fontSize=\"14\"\n    >\n      <Box as=\"img\" borderRadius=\"round\" width=\"20\" height=\"20\" src={collection.image} />\n      <Box marginLeft=\"6\" className={styles.collectionFilterBubbleText}>\n        {collection?.name}\n      </Box>\n      <Box\n        color=\"darkGray\"\n        background=\"none\"\n        height=\"28\"\n        width=\"28\"\n        padding=\"0\"\n        as=\"button\"\n        border=\"none\"\n        cursor=\"pointer\"\n        onClick={() => setCollectionFilters(collection.address)}\n      >\n        <CrossIcon />\n      </Box>\n    </Row>\n  )\n}\n\nconst CollectionSearch = ({\n  searchText,\n  setSearchText,\n}: {\n  searchText: string\n  setSearchText: Dispatch<SetStateAction<string>>\n}) => {\n  return (\n    <Box\n      as=\"input\"\n      borderColor={{ default: 'medGray', focus: 'genieBlue' }}\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderRadius=\"8\"\n      padding=\"12\"\n      backgroundColor=\"white\"\n      fontSize=\"14\"\n      color={{ placeholder: 'darkGray', default: 'blackBlue' }}\n      placeholder=\"Search by name\"\n      value={searchText}\n      width=\"full\"\n      onChange={(e: FormEvent<HTMLInputElement>) => setSearchText(e.currentTarget.value)}\n    />\n  )\n}\n","export const ListPage = () => {\n  return <div>List your NFTs</div>\n}\n","import \"src/nft/components/common/Loading/LoadingSparkle.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/common/Loading/LoadingSparkle.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBfMWNmOWdudzAgewogIDAlIHsKICAgIG9wYWNpdHk6IDAuMjsKICB9CiAgMTAwJSB7CiAgICBvcGFjaXR5OiAxOwogIH0KfQouXzFjZjlnbncxOm50aC1jaGlsZCgxKSB7CiAgYW5pbWF0aW9uOiAwLjVzIGluZmluaXRlIF8xY2Y5Z253MDsKICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9Ci5fMWNmOWdudzE6bnRoLWNoaWxkKDIpIHsKICBhbmltYXRpb246IDAuNXMgaW5maW5pdGUgXzFjZjlnbncwOwogIGFuaW1hdGlvbi1kZWxheTogMC4xczsKICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9Ci5fMWNmOWdudzE6bnRoLWNoaWxkKDMpIHsKICBhbmltYXRpb246IDAuNXMgaW5maW5pdGUgXzFjZjlnbncwOwogIGFuaW1hdGlvbi1kZWxheTogMC4yczsKICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var path = '_1cf9gnw1';","import { themeVars } from 'nft/css/sprinkles.css'\n\nimport * as styles from './LoadingSparkle.css'\n\nexport const LoadingSparkle = () => {\n  return (\n    <svg width=\"40\" height=\"41\" viewBox=\"0 0 40 41\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M17.8281 10.834C17.6159 9.88757 17.4333 9.13689 17.291 8.58997C17.1751 8.11971 16.9497 7.68339 16.6331 7.31649C16.2834 6.97574 15.8515 6.731 15.3791 6.60601C14.8206 6.43175 14.0365 6.24408 13.0457 6.04301C12.7771 5.98134 12.6321 5.83926 12.6321 5.61405C12.6286 5.56049 12.6369 5.50679 12.6564 5.45676C12.6758 5.40674 12.7061 5.36159 12.7449 5.32448C12.8303 5.25054 12.9343 5.20142 13.0457 5.18241C13.8337 5.03623 14.6127 4.84557 15.3791 4.61136C15.8508 4.48054 16.282 4.23345 16.6331 3.89283C16.9497 3.52593 17.1751 3.08961 17.291 2.61935C17.4468 2.06885 17.6258 1.32623 17.8281 0.39145C17.8791 0.123349 18.016 0 18.2416 0C18.4671 0 18.6095 0.131392 18.6739 0.39145C18.8726 1.32623 19.0516 2.06885 19.211 2.61935C19.3304 3.08988 19.5585 3.52599 19.8769 3.89283C20.229 4.23347 20.6611 4.48052 21.1336 4.61136C21.8997 4.84657 22.6788 5.03724 23.467 5.18241C23.576 5.18865 23.6782 5.23739 23.7515 5.31813C23.8249 5.39887 23.8635 5.50515 23.8591 5.61405C23.8591 5.83926 23.7275 5.98134 23.467 6.04301C22.6802 6.19136 21.9014 6.37926 21.1336 6.60601C20.6605 6.73103 20.2276 6.97574 19.8769 7.31649C19.5585 7.68333 19.3304 8.11943 19.211 8.58997C19.0472 9.12617 18.8672 9.88757 18.6739 10.834C18.6095 11.1021 18.4671 11.2281 18.2416 11.2281C18.016 11.2281 17.8737 11.0967 17.8281 10.834Z\"\n        fill={themeVars.colors.darkGray}\n        className={styles.path}\n      />\n      <path\n        d=\"M32.4448 19.8364C32.2192 18.6679 32.0079 17.7366 31.8166 17.0452C31.6743 16.4509 31.3902 15.8999 30.9885 15.4396C30.5445 15.0113 29.9992 14.7027 29.4037 14.5425C28.4447 14.2629 27.4703 14.0397 26.4853 13.874C26.1398 13.8226 25.9656 13.6426 25.9656 13.3369C25.9618 13.2674 25.9723 13.1978 25.9964 13.1324C26.0204 13.0671 26.0576 13.0074 26.1055 12.9569C26.2105 12.8597 26.3433 12.7977 26.4853 12.7798C27.4694 12.6134 28.4437 12.3931 29.4037 12.1198C30.0021 11.9667 30.549 11.6571 30.9885 11.2228C31.389 10.7583 31.6729 10.2049 31.8166 9.60859C32.0079 8.91721 32.2192 7.98584 32.4448 6.81449C32.4458 6.74608 32.4607 6.67858 32.4886 6.61609C32.5164 6.5536 32.5567 6.49743 32.6068 6.45096C32.657 6.40448 32.7161 6.3687 32.7806 6.34574C32.845 6.32278 32.9134 6.31313 32.9816 6.31739C33.2672 6.31739 33.4528 6.48309 33.5213 6.81449C33.7479 7.98584 33.9573 8.91721 34.1495 9.60859C34.2907 10.2036 34.5706 10.7567 34.9662 11.2228C35.404 11.6593 35.9516 11.9693 36.551 12.1198C37.515 12.3926 38.493 12.6129 39.4808 12.7798C39.5532 12.7803 39.6248 12.7958 39.6909 12.8254C39.757 12.855 39.8162 12.8981 39.8648 12.9518C39.9134 13.0055 39.9503 13.0687 39.9732 13.1375C39.9961 13.2063 40.0044 13.279 39.9977 13.3512C39.9977 13.6569 39.8263 13.8369 39.4808 13.8883C38.4922 14.0545 37.514 14.2778 36.551 14.5568C35.9543 14.7142 35.4084 15.0232 34.9662 15.4539C34.5695 15.916 34.2894 16.4666 34.1495 17.0595C33.9592 17.7509 33.7498 18.6813 33.5213 19.8507C33.4528 20.185 33.2758 20.3507 32.9816 20.3507C32.912 20.3546 32.8424 20.3442 32.777 20.32C32.7116 20.2958 32.6519 20.2585 32.6015 20.2103C32.5512 20.1621 32.5113 20.104 32.4843 20.0396C32.4573 19.9753 32.4439 19.9062 32.4448 19.8364Z\"\n        fill={themeVars.colors.darkGray}\n        className={styles.path}\n      />\n      <path\n        d=\"M12.6196 40.6995C12.5109 40.7023 12.4027 40.6829 12.3013 40.6422C12.2 40.6016 12.1075 40.5405 12.0294 40.4627C11.8673 40.3009 11.7574 40.0919 11.7145 39.8639C11.418 38.0492 11.1251 36.5322 10.8358 35.3128C10.6133 34.2663 10.2461 33.258 9.74531 32.3187C9.32818 31.5649 8.73049 30.9334 8.00907 30.4841C7.132 29.9745 6.18128 29.6124 5.19297 29.4117C4.03371 29.1449 2.58684 28.8918 0.852359 28.6523C0.616735 28.6254 0.397657 28.5147 0.23303 28.3393C0.0804808 28.1721 -0.00302245 27.9506 0.000117795 27.7214C-0.00358202 27.4921 0.0799998 27.2703 0.23303 27.1035C0.396979 26.9271 0.616416 26.8162 0.852359 26.7905C2.5886 26.5618 4.03812 26.3114 5.20091 26.0392C6.20136 25.8286 7.16449 25.4614 8.05671 24.9505C8.7902 24.5064 9.40286 23.8792 9.83794 23.1268C10.3473 22.1993 10.7151 21.1968 10.9284 20.1545C11.2054 18.9369 11.4701 17.4162 11.7224 15.5925C11.7547 15.3608 11.8619 15.147 12.0268 14.9855C12.1058 14.9052 12.1997 14.8418 12.3028 14.7993C12.406 14.7567 12.5164 14.7359 12.6276 14.7378C12.7392 14.7338 12.8506 14.7526 12.9551 14.7933C13.0596 14.834 13.1552 14.8956 13.2363 14.9747C13.398 15.1367 13.5079 15.3456 13.5513 15.5735C13.8583 17.3972 14.1565 18.9178 14.4459 20.1354C14.6712 21.1811 15.0382 22.189 15.5363 23.1295C15.9558 23.8807 16.5531 24.5108 17.2726 24.9614C18.1474 25.4733 19.095 25.8407 20.0807 26.0501C21.2347 26.3223 22.6789 26.5727 24.4134 26.8014C24.6493 26.8271 24.8688 26.938 25.0327 27.1144C25.185 27.2815 25.2677 27.5033 25.263 27.7323C25.2662 27.9634 25.1839 28.1872 25.0327 28.3583C24.8722 28.5382 24.6503 28.6474 24.4134 28.6632C22.9509 28.7659 21.4954 28.9559 20.0542 29.232C19.046 29.4136 18.075 29.7698 17.1826 30.2854C16.4365 30.7497 15.8216 31.4065 15.3987 32.1908C14.8949 33.1535 14.531 34.187 14.3188 35.2584C14.04 36.5068 13.7842 38.0429 13.5513 39.8666C13.5238 40.1013 13.4192 40.3193 13.2548 40.4845C13.1681 40.5618 13.0673 40.6207 12.9583 40.6576C12.8492 40.6945 12.7341 40.7087 12.6196 40.6995Z\"\n        fill={themeVars.colors.darkGray}\n        className={styles.path}\n      />\n    </svg>\n  )\n}\n","import clsx from 'clsx'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { Box } from 'nft/components/Box'\nimport { Row } from 'nft/components/Flex'\nimport { ArrowsIcon, ChevronUpIcon, ReversedArrowsIcon } from 'nft/components/icons'\nimport { buttonTextMedium } from 'nft/css/common.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { DropDownOption } from 'nft/types'\nimport { useEffect, useLayoutEffect, useMemo, useReducer, useRef, useState } from 'react'\n\nimport * as styles from './SortDropdown.css'\n\nexport const SortDropdown = ({\n  dropDownOptions,\n  inFilters,\n  mini,\n  miniPrompt,\n  top,\n  left,\n}: {\n  dropDownOptions: DropDownOption[]\n  inFilters?: boolean\n  mini?: boolean\n  miniPrompt?: string\n  top?: number\n  left?: number\n}) => {\n  const [isOpen, toggleOpen] = useReducer((s) => !s, false)\n  const [isReversed, toggleReversed] = useReducer((s) => !s, false)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n\n  const [maxWidth, setMaxWidth] = useState(0)\n\n  const ref = useRef<HTMLDivElement>(null)\n  useOnClickOutside(ref, () => isOpen && toggleOpen())\n\n  useEffect(() => setMaxWidth(0), [dropDownOptions])\n\n  const reversable = useMemo(\n    () => dropDownOptions[selectedIndex].reverseOnClick || dropDownOptions[selectedIndex].reverseIndex,\n    [selectedIndex, dropDownOptions]\n  )\n\n  return (\n    <Box\n      ref={ref}\n      transition=\"250\"\n      borderRadius=\"12\"\n      borderBottomLeftRadius={isOpen ? '0' : undefined}\n      borderBottomRightRadius={isOpen ? '0' : undefined}\n      height=\"44\"\n      style={{ width: inFilters ? 'full' : mini ? 'min' : maxWidth ? maxWidth : '300px' }}\n    >\n      <Box\n        as=\"button\"\n        fontSize=\"14\"\n        borderRadius=\"12\"\n        borderStyle={isOpen && !mini ? 'solid' : 'none'}\n        background={mini ? 'none' : 'lightGray'}\n        borderColor=\"medGray\"\n        borderWidth=\"1px\"\n        borderBottomLeftRadius={isOpen ? '0' : undefined}\n        borderBottomRightRadius={isOpen ? '0' : undefined}\n        padding={inFilters ? '12' : mini ? '0' : '8'}\n        color=\"blackBlue\"\n        whiteSpace=\"nowrap\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        width={inFilters ? 'full' : 'inherit'}\n        onClick={toggleOpen}\n        cursor=\"pointer\"\n        className={clsx(isOpen && !mini && styles.activeDropdown)}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          {!isOpen && reversable && (\n            <Row\n              onClick={(e) => {\n                e.stopPropagation()\n\n                if (dropDownOptions[selectedIndex].reverseOnClick) {\n                  dropDownOptions[selectedIndex].reverseOnClick?.()\n                  toggleReversed()\n                } else {\n                  dropDownOptions[dropDownOptions[selectedIndex].reverseIndex ?? 1 - 1].onClick()\n                  setSelectedIndex(dropDownOptions[selectedIndex].reverseIndex ?? 1 - 1)\n                }\n              }}\n            >\n              {dropDownOptions[selectedIndex].reverseOnClick && (isReversed ? <ArrowsIcon /> : <ReversedArrowsIcon />)}\n              {dropDownOptions[selectedIndex].reverseIndex &&\n                (selectedIndex > (dropDownOptions[selectedIndex].reverseIndex ?? 1) - 1 ? (\n                  <ArrowsIcon />\n                ) : (\n                  <ReversedArrowsIcon />\n                ))}\n            </Row>\n          )}\n          <Box\n            marginLeft={reversable ? '4' : '0'}\n            marginRight={mini ? '2' : '0'}\n            color=\"blackBlue\"\n            className={buttonTextMedium}\n          >\n            {mini ? miniPrompt : isOpen ? 'Sort by' : dropDownOptions[selectedIndex].displayText}\n          </Box>\n        </Box>\n\n        <ChevronUpIcon\n          secondaryColor={mini ? themeVars.colors.blackBlue : undefined}\n          secondaryWidth={mini ? '20' : undefined}\n          secondaryHeight={mini ? '20' : undefined}\n          style={{\n            transform: isOpen ? '' : 'rotate(180deg)',\n          }}\n        />\n      </Box>\n      <Box\n        position=\"absolute\"\n        zIndex=\"2\"\n        width={inFilters ? 'auto' : 'inherit'}\n        right={inFilters ? '16' : 'auto'}\n        paddingBottom=\"8\"\n        fontSize=\"14\"\n        background=\"lightGray\"\n        borderStyle=\"solid\"\n        borderColor=\"medGray\"\n        borderWidth=\"1px\"\n        borderRadius=\"8\"\n        borderTopLeftRadius={mini ? undefined : '0'}\n        borderTopRightRadius={mini ? undefined : '0'}\n        overflowY=\"hidden\"\n        transition=\"250\"\n        display={isOpen || !maxWidth ? 'block' : 'none'}\n        visibility={maxWidth ? 'visible' : 'hidden'}\n        marginTop={mini ? '12' : '0'}\n        className={clsx(!mini && styles.activeDropDownItems)}\n        style={{\n          top: top ? `${top}px` : 'inherit',\n          left: inFilters ? '16px' : left ? `${left}px` : 'inherit',\n        }}\n      >\n        {!maxWidth\n          ? [\n              dropDownOptions.reduce((acc, curr) => {\n                return curr.displayText.length >= acc.displayText.length ? curr : acc\n              }, dropDownOptions[0]),\n            ].map((option, index) => {\n              return <LargestItem key={index} option={option} index={index} setMaxWidth={setMaxWidth} />\n            })\n          : isOpen &&\n            dropDownOptions.map((option, index) => {\n              return (\n                <DropDownItem\n                  key={index}\n                  option={option}\n                  index={index}\n                  mini={mini}\n                  onClick={() => {\n                    dropDownOptions[index].onClick()\n                    setSelectedIndex(index)\n                    toggleOpen()\n                    isReversed && toggleReversed()\n                  }}\n                />\n              )\n            })}\n      </Box>\n    </Box>\n  )\n}\n\nconst DropDownItem = ({\n  option,\n  index,\n  onClick,\n  mini,\n}: {\n  option: DropDownOption\n  index: number\n  onClick?: () => void\n  mini?: boolean\n}) => {\n  return (\n    <Box\n      as=\"button\"\n      border=\"none\"\n      key={index}\n      display=\"flex\"\n      alignItems=\"center\"\n      paddingTop=\"10\"\n      paddingBottom=\"10\"\n      paddingLeft=\"12\"\n      paddingRight={mini ? '20' : '0'}\n      width=\"full\"\n      background={{\n        default: 'lightGray',\n        hover: 'lightGrayButton',\n      }}\n      color=\"blackBlue\"\n      onClick={onClick}\n      cursor=\"pointer\"\n    >\n      {option.icon && (\n        <Box width=\"28\" height=\"28\">\n          {option.icon}\n        </Box>\n      )}\n      <Box marginLeft=\"8\" className={buttonTextMedium}>\n        {option.displayText}\n      </Box>\n    </Box>\n  )\n}\n\nconst MAX_PADDING = 52\n\nconst LargestItem = ({\n  option,\n  index,\n  setMaxWidth,\n}: {\n  option: DropDownOption\n  index: number\n  setMaxWidth: (width: number) => void\n}) => {\n  const maxWidthRef = useRef<HTMLDivElement>(null)\n\n  useLayoutEffect(() => {\n    if (maxWidthRef && maxWidthRef.current) {\n      setMaxWidth(Math.ceil(maxWidthRef.current.getBoundingClientRect().width) + MAX_PADDING)\n    }\n  })\n\n  return (\n    <Box key={index} position=\"absolute\" ref={maxWidthRef}>\n      <DropDownItem option={option} index={index} />\n    </Box>\n  )\n}\n","import \"src/nft/components/common/SortDropdown/SortDropdown.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/common/SortDropdown/SortDropdown.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xMnE3a3RoMCB7CiAgYm9yZGVyLWJvdHRvbTogbm9uZTsKfQouXzEycTdrdGgxIHsKICBib3JkZXItdG9wOiBub25lOwp9\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var activeDropdown = '_12q7kth0';\nexport var activeDropDownItems = '_12q7kth1';","import clsx from 'clsx'\nimport { Box } from 'nft/components/Box'\nimport { ApprovedCheckmarkIcon } from 'nft/components/icons'\nimport React from 'react'\n\nimport * as styles from './Checkbox.css'\n\ninterface CheckboxProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  hovered: boolean\n  children: React.ReactNode\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({ hovered, children, ...props }: CheckboxProps) => {\n  return (\n    <Box\n      as=\"label\"\n      display=\"flex\"\n      alignItems=\"center\"\n      position=\"relative\"\n      overflow=\"hidden\"\n      cursor=\"pointer\"\n      lineHeight=\"1\"\n    >\n      {children}\n      <Box\n        as=\"span\"\n        borderColor={props.checked || hovered ? 'blue400' : 'grey400'}\n        className={styles.checkbox}\n        // This element is purely decorative so\n        // we hide it for screen readers\n        aria-hidden=\"true\"\n      />\n      <input {...props} className={styles.input} type=\"checkbox\" />\n      <ApprovedCheckmarkIcon className={clsx(styles.checkMark, props.checked && styles.checkMarkActive)} />\n    </Box>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE5y9244jTZKked9PkUChgS6gsxB0nv+5mfrrsNjrHWCveSaD5zMjFv3uy8iMZFI/E3NTjamZ7pqkiNFE3VxFGGZ0/nHYbk/f/r//+Pbt+/fD7NqZvL/88e0yOPzX9++zyWYx+T7arraH4/fJ4bA9/PV/PeEaEnea3E7/XBxH281mMjoZQiUJ6+14sPpzMFqOD9udwTclfniHzg7b82b8/0zu7zIeHN4Mq5V/l3+stseJAbezGgyskx/z/9yxeiJdPf3Vff5/rs52Hj2JvQ+5/L8OAztsX89lMk6QA4lcLWbzU4IdSux1vjjZiY5qJ9p4MeBxfQUqi57odXfbrRajxen/TaYy1YUYzBaj+1zGi8nGXsSZxO/us5nMt6vxxK7ueX3x/jyfTtuNYSw0Y3ufymZmkK/5YvfbBrmsQdrqrfLInkWu88iXnkFuCjfgv+/iThS3/ePbX1r/6FX//vP5X3d/fFstNpPB4fvs89r8V9V9GU9m//3tL/9s/LP9zz+/vfzn/b//u/Pxn2+Nl5f/NKPu//j2srt9a93/X6Nz/x+H2XDwX92X//7WaLT/+1vVvv+3l7+1DOVwn0j10u+1m8//erz/67//Xv2j2Xv+19Mf334sy+d/O38g2x//ef7Xi5R3vf/ry78ajcbfn//1dv/Xf/z5j3/98x/P//p2/9fuvz/+8/yv7398Ox0Gm+NucLgXx/TZe0PebDcT828NOY3GvcX+5e///PMf//5388W80PwQ82ej0fuX+ed7s/xLu/kybVh0Wxap0flA/+Pf/+r/0/zzvdH9pfH3frttB+nJmjT6H+hW48/KznzwcbX6zarVN/88/HjLf3V6va7559FHDf/Ra/+9Mv98bzh/6ff/3vjTTvDeWf7yZ/fPf/2zZf753kD+8s9//qv5bzv2vU/85V///Ne/8c/3hvBz0XXui6758rHoGh+LrrKrrrH4xFXtHwvz1/94+VujssDXT2Cj3byP2LkP1uj11YjLh6qGFbD6WASjXjUdNsfmhfst3vhb+36bHLerxfjn23zcIT//798advyNWF/bH/eb+af7LdzCP93vyh7+6X7XNci833ONCv92v+MaHO5+x33c3Obf7vdbxfHud1uT/3a/11r8t7ePufAf39M3qe53WIXJVPc7rH//P/jX+w1mVnnVTPVWrVRv1U71Vh0xlW6qt+qJ6d1vowq1r+73UJO4+w3U5HuM0lpV91unxfHu902HuPtN0+d4s4/xbFnud0sb/7T4GM3+0/0W6OKf7ou9j39afZSzvT6af7wv8XvXxz9ufrwr/vG+lP/vzWly+O9vx3t//X6cHBZTA7gv7L/fLelsAf/zH3/7fH3/Ix4P7t6/+X43yfV9OU9Xk9v342lwOD0DrylwNPl46ydQs8qMNtmMn2G9FHY8HSan0fwZNUlRw8Fx8mG1z7ClGGx3zz3fBz98/BkqxP6EDien62SyecY+672/6TRTl1aV4JKytHp6LFuV1iRBpUVpLROQqElrnw6lS9JKZeYq0v6p9PV8PC2mb7WLpd1T0KQu7Ul2RFua9lIB0+q09wonCtS+ygF1jTpSeK5MHau9Zul0JgKZFKmzzI1na9TZC1xaos5VwESFupUaTheoqyTn6tP9qfrHR5PaRdRdpsCkOt19ZjRbnO41haW16VUpSpSm1xOD6cr0hNhcYXrPeu+fuU93rZnS9PYKmhSnd82OaMvTrxQwLVC/p3CiRP2JHFAXqS+F58rU/6l9esd9Py5+f7D+lWH++oy91mKbz9hBVYttGWyvFts22EkttmOwy1ps12Dr69Az2Po69J+xw/o6DAy2vg5Dg62vw8hg6+swNtj6OkwMtr4O02fs6KkO18nHn0aAnhl0r4CeG/SkgF4Y9LKAfjXofQG9NOifFVkPDrPF5vtwezpt1z8+BTwQ40ohGh8p+TempzCVxUwUpmUxS4XpWMxeYXoWI1X9/CjzAE20MDvriVTWsNOeSGkNO++J1NawE59IcRUmLtVVdk5Tqa6ybzeV6pq2BFOprmnVTaW6lp34VKprYU5SXduONJPq2nbiM6mubSc+k+o6eDu9Lm3FZ1JdF3OS6noWNJfqerZOc70yX+zM53ppvtipz/XaxDWeS4ENXJp55vr95xNmIQUOzqftM0gKPG+Ok+cotDACV5PpybavxTJ93TavxT5F2OuxuKYIW8DXKkXY4r32UoS9oK9CCVrWqxJj5/oq1KBdvQo5aFZLoQetaikEoVEthSK0qaVQhCa1FIrQopZCERbvSihCe1oJRWhOK6EI638lFKExrYQitKWVUISmtFZrzlZ3LRShIa2FIrSjtVCEZrRWqw6taK2WHRrRRq07XMmNEMUmtJHX6bkFbYQoNKCNEMX2szGiDj/j1nP/2VYCYBvQticg9hJsJwJiS7ddCoit3HYvIPZCbpUedKGdlGQnvFOa0Id2ShQa0U6pQifaKVloRTulC71or3ShGe2VLnSjvdKFRbxXutCP9koXGtJe6cLNcFC60JIOShd60kHpQlM6yFVo63xQutCWDkoX+tJR6UJjOsp1iM50lAsRrekoVyIu61FJY3M66mv23J1OShra00lJY386GWmn7c52p9Myedn2ptM+AdiLcLomAFu3c5UAbM3OvQRgr+E51YCOdBYy7DTPqQ50o3MqBL3okipBJ7qkUtCHLqkWdKFLqgU96JJqQQe6pFqwUK+pFnSfa6oFveeaasFKv6Za0HeuqRZ0nWuqBT3nJlaYrekt1YJ+c0u1oNvcUi3oNTexxtBpbmKRoc+8iVWGi/eWymGPeVPX5rnDvKVy0F/eUjnsLm8/5VwX49PcNpb36vmV6vmV3vMrVvv75Pk1W9335fNruL3f9+ZFW653M0vcso0XO9MXvGpmi1u18WLmW3Xwqplxxfc1U8YN3Hgxc8b1bzTMnHHjNhq2whi5YebcgqKGmTNu+EbDzLnNkc2c2xi5MnPGTd6ozJxxgzcqM+cORzZzxo3dqOzSeOHQdnHw+jcru7D4sl0eXahq2vWBftFo2gXSx8ybdoX0OLgtt7m7G60Kqu2rZtrr++39ue1iQGby68FNgpZ4n8vcvMziX67mZSMB/afRNhoWm/nksDBv/rnNPJ+kH7san3vLv16rzGtL8xqW0+cm8q9Xcc0+d45/vYo+1PjcK368jGvWsTNmL+pg0lhtHTtvdqOOnTjbUcfOnP2oa2fOhtS1M2dH6tqZsyV1UXEObmfOptS1M2dX6tmZsy317MzZl3p25mxMPTtzNoCenTlbU8/OnL2pj9XC5tTHcuGC6E+w2vg6Fgz7Ux8rhg2qjyXDDjXAmmGLGqD0tgsNJlRvX7aTz3SpgZWQaVODK9/K9qlhciFsoxpaIexUQ6tEtKrhr7h1+y7SUmO458umYQ2vfBnrbFQRgCs56hHAzjWaJAhczVGigf1rlMrAihwlStjFxokUNrJxooW9bJxoYTsbJ1rY0caJFja1cXpV8C6TRAtb2yTRwu42SbSwwU0SLexxk0QL29wk0cJeMk20sNlNEy3sd9N0jbHlTdNFxjU0TdQkjW+aLjP2vlm6ztj+ZulCYwecpSuNTXCWXh7b6GapHrTCWSIn0w3niahMQ5yn/YA9ca4ulm2L80QaO+M80Saa468tw7sm1Rx/7Rb+ftk0x1/7hL9fxrr8tUX4G4Dr/GuP8DeAzfHXHuETAld5kWhgc3xNZWDVviZK2BxfEylsjq+JFjbH10QLm+NrooXNcZloYXNcplcF77JMtLA5LhMtbI7LRAub4zLRwua4SrSwOa4SLew3q0QLm+Mq0cLmuErXGJvjKl1kXEPrRE3SHNfpMmNzXKfrjM1xnS40Nsd1utLYHNfp5bGtb5PqQXPcJHIyzXGTiMo0x03aD9gcN+pi2ea4SaSxOW4TbaI5bn93avlBdztJXjftcbtMXsfS3O4TBK719pog2CF3VQrBtd6lStgjd0IMVu8u1cMuuUsFsU3uUkXsk/tUERvlPlXETrlPFbFV7sUV4hulitgs96kidstDqojt8pAqYr88pIrYMA+pIjahQ6qILfOQKmLPPIpVx6Z5FMuOi+qYakra5lEsPPbNo1h5bJxHsfTYOU9i7bF1nsSlsp3xJFSheZ5SUZnueUqlZdrnSXQL9s+zvHC2gZ5Tgeyg51ShaKHn3/1cttDzPnndtNDzNXkdS/VSJQhc9UsvQbCFXiYpBNf8kiphC70IMVjJl1QPW+g1FcQWek0VsYVeU0VsoddUEVvoNVXEFnoVVwhvdEsVsYXeUkVsobdUEVvoLVXEFnpLFbGF3lJFbEhvqSK20LdUEVvom1h1bKFvYtlxUb2lmpIW+iYWHlvou1h5bKHvYumxhb6LtccW+i4ule2P70IVWuh7Kkq30OollaZbaPUiugVaaPUiL5xpodVLKhAttHpJFaYttPrcj9wNxh8PfJBfFKg+dyWJsQdKqs/dSaIqoCYS1QJqKVEdoPYS1QNKK8RJk6rKiMT8K60SZ06qSstE268qrROtv6q00IoStFJYQNXUStHjq6ZWij5fNbVS9PqqqZWi31dNrbTFuWmlOCtRtbRSNPaqpZWic1ctrbTDN82sXVyFllba5dy0UpxhqdpaKfpr1c6sXvhC1c4sXxxpqdqZ9cur39Ziebilaueu63NjrjpaLBtgR4vlWZeqY8WmXzWoOkuBQPvr7AUGV6lzFRiUtFsJDMrZ7QkMLnVXqWLT60phmHVXKWPD6yppbHc9pY3NrqfEsdX1lDo2up5SxzbXU+rY5HpKHRd5X6ljg+srdWxvfaWO90pfqWNr6yt1bGx9pY5tbSDXJSo+UOrY0gZKHRvaQKljOxvIlclmNpBLk61sKNcmr/FQCUza2FBfP9PEhkogW9hQCUwa2NAKFF9WqEaVgqCFjXoKhAszmigQijlaKhBqOdorEC7xSGpjHxtreZj6WOpjJxtLgWxlY6mQvWwsJbKZjaVGdrOJ1Mh2NpEa2c8mUiMX+0RqZEebSI1saROpkTfOVGpkU5tKjexqU6mRbW2qVypqP5Ua2dimUiM720xqZGub6bXK3jbTi5XNbaZXKy/4TMpM2tsscy1Nf5tLmWxwcykz6XBzKzP5ukM1X6YAdLf5PoXg0syvKQSVXFQpBFVc9FIIru5C6GFPWyhJmPBCaGI/WwhR7GavQhV72auQxU72KnSxj70KXexir0IXe9ir0MUFvRS62L+WQhe711Lo4l2xFLrYuZZCF/vWUuhi11qpVYg6r4QudqyV0MV+tRK62K1Wah2yV63UQmSnWquVyMu6FtKSLrWW18z0qLWQxg61FtKS/rQ20tCbNpV9EX1p07Mvo/ybiX0Z9dos7cuo1GZvX8Z122De7EFbTh2T22Lu7D1bTJ59Z4vZs+dsMX32my3mz16zw/zZZ3aYP3vMDvPnQtxh/uwtO8yffWWH+XMN7zF/9pM95s9essf82Uf2XD2o3x7zZ//YY/7sHQfMn33jwPXDnnHgAmK/OHAF8RIdICHpE4fkGpgecYQE9ocjJCS94XMLWv5l/XPrOfMX9c9N58xf0j+3mzN/Qf/caM785fxziznzF/OTnTGbwgmTxrxOdtZsCSc7bXaEs503G8LZTpz94GxnznZwtjNnNzjbmbMZnO3MudAuduZsBRc7c3aCi505F+nFzpx94GJnzjZwsTNnF7hiraBqVztz9oCrnTlbwNXOnB3gitXCBnDFcuH9f8N64VW52cknd/+NdTc3/81Onvf+zU4+ufU/93rFX5Q/t3jlX5I/93blX5A/N3XlX44/N3PlX4w/N3HlX4rfnmfJm/3dTBSzeX+eKW/09+ep8jZ/f54rb/L358nyFn9/ni1u8ObL82xxezdfnmeLm7v58jxbLKLmy/NscWM3X55n2+J7Ps8Wa6/ZeJ4tbulm43m2uKGbjefZdjisWQeoUON5tl2+5/NscSM3q+fZ4jZuVmYl4CZuVmYp4BZuVmYtsPbV84R5+zYrW9/nm7fZfJ4wbt1m83nCvHGbn5ua4i+pzc+NTPkX1Obn9qX8y2nzc9NS/sW0+blVKf9S2vzcoJR/IW22zFxx/zZbdrqYUsvMt8E5mQnjFm62zYxxDzfbZsq4iZttM2fexW0zZ97GbTNn3sdtM2cupo6ZM+/kjpkzb+WOmTMXYsfMmTdzx8yZd3PHzJm3c9euDNSqa+bMG7pr5sw7umvmzFu6a9cG7+muXRy8qXt2dfBC9My0k9u6h1qb+7pnps0bu2emndzZnzt5yV8Qm5+7d+Ivh83PPTvxF8Pm506d+Eth83N/TvyFsPm5Kyf+MtjsP82P9/LgeYqYyOBpjryPB0+T5F08eJol7+HB0zR5Bw+e5sn7d/g0T969w6d58t4dPs2TC2b4NE/et8OnefKuHT7Nk6ts9DRP3rGjp3nyfh09zZN36+j5qqMuo6d58k4dPc2T9+n4aZ68S8fP15336Pj5wvMOHT9feZZ7/DTV5O4cm5qae3PyNFXemZOnqSb3pXnUKm5N84TV5O40j1ZNblDzTNXkHjUPU01uU/MU1eROndoZ82adYtKY19TOmrfs1E6bd+3Mzps37sxOnPfuzM6ct+/Mzpx38MzOnDfxzM6cC2tuZ85beW5nzrt5bmfOhTm3M+c9Pbcz5209tzPnnb3AWkHVFnbmvL8Xdua8xRd25rzLF1gtvNEXWC6811+xXnhVXu3kkzv+lXU3N/2rnTzv+1c7+eTW/9zIef++2Iwnt/u7P7/4uYPzeLEyL/bsi03z4sS+yGl97tf8ftuXF9N1Pvdqnl6v7Ouc9kvTvL6q+HrLvt7j6237+oSvd+zryfy79vVk/j37+s/5zwZMQp9bMD9eQK/93Hj58RJW8Od2y4+XsPo+t1l+vISF97m78uMlrPn10/zYXDfPU8RENk9zZFvdPE2SPXXzNEs21M3TNNlNN0/zZCvdPs2TfXT7NE820e3TPHmvbp/myfa5fZone+f2aZ68v3dP82TX3D3Nky1z9zRP9svd81VHXXZP82Sn3D3Nk21y/zRP9sj983Vng9w/X3h2x/3zlWe5909TTfri3tTUNMXD01TZeg5PU03a4eeWx8/fB5kfFpsl7s/PLQ8DwH36uelhICjl57aHgaAun1sfBoLqfO5+GAiuy1Ho4f18VJIw4aPQxPv7KETxPj8JVbzfT0IW7/uT0MX7/yR0sQ+chC72g5PQxYV6FrrYH85CF/vEWejiuj8LXewbZ6GL/eMsdLGPXNQqRJ0vQhf7ykXoYn+5CF3sMxe1DtlvLmohsu9c1UrkZb0KaUkfusprZvrRVUhjX7oKaUl/uv6Whqx2q55eMUHt1nt6xaS029PMr4ePhrjZfvxvg1kSkyD2CvH9MLlMDkfzo3KfWzLjxXG3Grz9+g3J369/bsw8Xh+uth8/sPoE6FnAx3ua1yf29cXm4yeUviewpYSlb7e3uNlhYX757u2qxnlG/Hpi58dP5X7/8eNLqsafWzkfPyL9fXuv2nS1vf7xbbJaLXbHxdEgJ7+RP35e7o8ff0U3kGUC+fH3OIPZJ5j0Zwc/N3ueQZ8/RvaEan3u+lwWx8VwsVqc7mX48d9X5qfzPrd/nlHzxXhsfoOq9fK0HMeLw2R0Wmw/Zr+9GtRSokbb1Xlth9vXAMXybH3uF/36xbX6XwtrfW4gJej0hwo/d5P0uPi5ws/NpQQrfrTwc6spgaqfLvzceUqHzfyAYSNTitzvh7V+fYNve1z8LPNgeLwX+mRm8blR9Rs0Xdwm5n1/fXXvgThMVoPT4mKHWQJ0n+RoaVblry/tPUHuw4wM5KfE7fD1vjK+Txcfl+4uc7Awuj73sSzqYq/v53bW9jCeHGxcbH3uZX2+1DAv/VSxvVf0x/0AP2h9bmc9XrfjXvHi38zYnxtaTy83zcs9vtw2L0/4cte8jInbd/456x8//G1/IuvlrwZ3+GP+UUcn+vjHYPSxDJzw0x/T7eh8dKLPfwwn0+3BO/jljz+efgLeSbrmcA2Lu9WXBei3QlkAf68vi0W3XwplAbzhKgtIVQ5XWVyzvixAtwplAbxdXxagO4WyAN51lQWkXg7XtLh+fVmAHhTKAviwvixAjwplAXzsKgtI2cFbFjetLwvQs0JZAJ/XlwXoRaEsgL+6ygLSModrW9yqvixArwtlAXxTXxagt4WyAL5zlQWkrBN1LK7gRECXnAjwghMBXXIiwH1OBFLWiboWV3AioEtOBHjBiSy6U3IiwH1OBFLWiXoWV3AioEtOBHjBiYAuORHgPicCKetEfYsrOBHQJScCvOBEQJecCHCfE4GUHXxgcQUnArrkRIAXnAjokhMB7nMikLJONLS4ghMBXXIiwAtOBHTJiQD3ORFIWScaWVzBiYAuORHgBScCuuREgPucCKSsE40truBEQJecCPCCE1l0t+REgPucCKSsE00sruBEQJecCPCCEwFdciLAfU4EUtaJphZXcCKgS04EeMGJgC45EeA+JwIpO/jM4gpOBHTJiQAvOBHQJScC3OdEIGWdaG5xBScCuuREgBecCOiSEwHucyKQsk60sLiCEwFdciLAC04EdMmJAPc5EUhZJ3q1uIITAV1yIsALTmTRvZITAe5zIpCyTrS0uIITAV1yIsALTgR0yYkA9zkRSFknWllcwYmALjkR4AUnArrkRID7nAik7OBriys4EdAlJwK84ERAl5wIcJ8TgZR1oo3FFZwI6JITAV5wIqBLTgS4z4lAyjrR1uIKTgR0yYkALzgR0CUnAtznRCBlnWhncQUnArrkRIAXnMii+yUnAtznRCBlnWhvcQUnArrkRIAXnAjokhMB7nMikLJOdLC4ghMBXXIiwAtOBHTJiQD3ORFI2cGPFldwIqBLTgR4wYmALjkR4D4nAinrRCeLKzgR0CUnArzgRECXnAhwnxOBlHWis8UVnAjokhMBXnAioEtOBLjPiUDKOtHF4gpOBHTJiQAvOJFFD0pOBLjPiUDKOtHV4gpOBHTJiQAvOBHQJScC3OdEIGWd6GZxBScCuuREgBecCOiSEwHucyKQsoO/WVzBiYAuORHgBScCuuREgPucCKSsE71bXMGJgC45EeAFJwK65ESA+5wIpKwTNexpskHBiggveRHxBTMivORGxPvsiKz8CTp7pmxQOkIHePEMHfClQ3QWPiyeogPeeYwOrKwrNezJsmHBlggv+RLxBWMivORMxPusiaysNzXs+bJhwZwIL7kT8QV7IrzkT8T7DIqs/PD2lNmwYFGElzyK+IJJEV5yKeJ9NkVW1qca9qzZsGBUhJeciviCVRFe8irifWZFVt6t7ImzYcmtAC+6FfAltwK86FbAO90KrLxb2XNnw5JbAV50K+BLbmXho6JbAe90K7DybmVPn41KbgV40a2AL7kV4EW3At7pVmDl3cqeQRuV3ArwolsBX3IrwItuBbzTrcDKD29Poo1KbgV40a2AL7kV4EW3At7pVmDl3cqeRxuV3ArwolsBX3IrwItuBbzTrcDKu5U9lTYquRXgRbcCvuRWgBfdCninW4GVdyt7Nm1UcivAi24FfMmtLHxcdCvgnW4FVt6t7Am1ccmtAC+6FfAltwK86FbAO90KrLxb2XNq45JbAV50K+BLbgV40a2Ad7oVWPnh7Wm1ccmtAC+6FfAltwK86FbAO90KrLxb2TNr45JbAV50K+BLbgV40a2Ad7oVWHm3sifXxiW3ArzoVsCX3ArwolsB73QrsPJuZc+vjUtuBXjRrYAvuZWFT4puBbzTrcDKu5U9xTYpuRXgRbcCvuRWgBfdCninW4GVdyt7lm1ScivAi24FfMmtAC+6FfBOtwLr5/DDwWg5+/E8CIu2f42fPDuWk2Jcy8l5di4nxbiXkyMczMlc1oLtX+knK0fRQFl7igbOxlE0ULaeooEjnM3J3NeC7V/vJwdH0UA5eooGzslRNFDOnqKBIxzPybzWgu1f9Sc3R9FAefMUDZx3R9EsZfriKRo4wgmdzKoWbP/aP206igZKy1M0cNqOooHS8RQNHOGQTmavFmx3AaZ9R9FAGXiKBs7QUTRQRp6igSOc08msfxu7OzD1uCcoLvcEx+OeoLjcE5yAe4JZ755212DqcU9QXO4Jjsc9QXG5JzgB9wSz3j3tbsLU456guNwTHI97guJyT3AC7glmvXvaXYapxz1BcbknOB73tJSZyz3BCbgnmPXuaXcfZh73BMXlnuB43BMUl3uCE3BPMOvd0+5KzDzuCYrLPcHxuCcoLvcEJ+CeYNa/jd2tmHncExSXe4LjcU9QXO4JTsA9wax3T7uLMfO4Jygu9wTH456guNwTnIB7glnvnnZ3Y+ZxT1Bc7gmOxz1BcbknOAH3BLPePe2ux8zjnqC43BMcj3taytzlnuAE3BPMeve0uyFzj3uC4nJPcDzuCYrLPcEJuCeY9e5pd0nmHvcExeWe4HjcExSXe4ITcE8w69/G7p7MPe4Jiss9wfG4Jygu9wQn4J5g1run3VWZe9wTFJd7guNxT1Bc7glOwD3BrHdPu9sy97gnKC73BMfjnqC43BOcgHuCWe+edhdm7nFPUFzuCY7HPS1l4XJPcALuCWa9e9pnLCw87gmKyz3B8bgnKC73BCfgnmDWu6d9AsPC456guNwTHI97guJyT3AC7glm/dvY5zMsPO4Jiss9wfG4Jygu9wQn4J5g1runfXrDwuOeoLjcExyPe4Lick9wAu4JZr172mc7LDzuCYrLPcHxuCcoLvcEJ+CeYNa7p33yw8LjnqC43BMcj3tayqvLPcEJuCeY9e5pnwvx6nFPUFzuCY7HPUFxuSc4AfcEs9497VMjXj3uCYrLPcHxuCcoLvcEJ+CeYNa/jX2mxKvHPUFxuSc4HvcExeWe4ATcE8x697RPnHj1uCcoLvcEx+OeoLjcE5yAe4JZ7572eRSvHvcExeWe4HjcExSXe4ITcE8w693TPq3i1eOeoLjcExyPe1rK0uWe4ATcE8x697TPslh63BMUl3uC43FPUFzuCU7APcGsd0/7pIulxz1BcbknOB73BMXlnuAE3BPMwoFLe9h06bFPclz+SZLHQMlxOShJAQsltXDy1h45XbqO3oLjO3sLkuvwLTi+07cgRY7fglrvpHh8xtJjpeS4vJQkj5mS43JTkgJ2Smq9n+LhGkuPoZLjclSSPJYKzsrlqSQFTJXUelfFozdWHlslx+WrJHmMlRyXs5IUsFZS670VD+ZYecyVHJe7kuSxV3Jc/kpSwGBJLbyRPZC6cjksOD6HBcnlsOD4HBakiMOCWnBYeyx15XJYcHwOC5LLYcHxOSxIEYcFteCw9nDqyuWw4PgcFiSXw4Ljc1iQIg4LasFh7RHVlcthwfE5LEguh7Wctc9hQYo4LKgFh7UHVdcuhwXH57AguRwWHJ/DghRxWFALDmuPq65dDguOz2FBcjksOD6HBSnisKAW3sgeWl27HBYcn8OC5HJYcHwOC1LEYUEtOKw9urp2OSw4PocFyeWw4PgcFqSIw4JacFh7gHXtclhwfA4LksthwfE5LEgRhwW14LD2GOva5bDg+BwWJJfDWs7G57AgRRwW1ILD2sOsG5fDguNzWJBcDguOz2FBijgsqAWHtUdaNy6HBcfnsCC5HBYcn8OCFHFYUAtvZA+2blwOC47PYUFyOSw4PocFKeKwoBYc1h5v3bgcFhyfw4LkclhwfA4LUsRhQS04rD3kunE5LDg+hwXJ5bDg+BwWpIjDglpwWHvUdeNyWHB8DguSy2EtZ+tzWJAiDgvqp8NuD3fid/HUGrsLtDUW6yVZj/WyjMl6SdZlvSxls15urwC3e0HbvquAIA18BQRr6CogSCNfAcFSZuvllt7K7ghtp64CgjTzFRCsuauAIC18BQRLWa6XuyzA7b7QduUqIEhrXwHB2rgKCNLWV0CwlPF6ufsC3O4ObQ+uAoJ09BUQrJOrgCCdfQUES9mvl3stwO0e0fbmKiBIb74CgvXuKqAl7V58BQRLmbCXW3Jhu1O087kwSE4XBsvnwiA5XRiskAuDW3Jhu1+087kwSE4XBsvnwiA5XRiskAuDW3oru2u087kwSE4XBsvnwiA5XRiskAuDW3Jhu3e087kwSE4XBsvnwiA5XRiskAuDW3Jhu4O087kwSE4XBsvnwiA5XRiskAuDW3Jhu4+087kwSE4XBsvnwpa0d7owWCEXBrfkwnY3ae9zYZCcLgyWz4VBcrowWCEXBrfkwnZPae9zYZCcLgyWz4VBcrowWCEXBrf0VnZnae9zYZCcLgyWz4VBcrowWCEXBrfkwnZ/ae9zYZCcLgyWz4VBcrowWCEXBrfkwnaXae9zYZCcLgyWz4VBcrowWCEXBrfkwnavae9zYZCcLgyWz4Ut6eB0YbBCLgxuyYXtjtPB58IgOV0YLJ8Lg+R0YbBCLgxuyYXtvtPB58IgOV0YLJ8Lg+R0YbBCLgxu6a3s7tPB58IgOV0YLJ8Lg+R0YbBCLgxuyYXtHtTB58IgOV0YLJ8Lg+R0YbBCLgxuyYXtc2gOPhcGyenCYPlcGCSnC4MVcmFwSy5sn0lz8LkwSE4XBsvnwpZ0dLowWCEXBrfkwvb5NEefC4PkdGGwfC4MktOFwQq5MLglF7bPqjn6XBgkpwuD5XNhkJwuDFbIhcEtvZV9bs3R58IgOV0YLJ8Lg+R0YbBCLgxuyYXtM2yOPhcGyenCYPlcGCSnC4MVcmFwSy5sn2dz9LkwSE4XBsvnwiA5XRiskAuDW3Jh+2ybo8+FQXK6MFg+F7akk9OFwQq5MLglF7bPuTn5XBgkpwuD5XNhkJwuDFbIhcEtubB95s3J58IgOV0YLJ8Lg+R0YbBCLgxu6a3s829OPhcGyenCYPlcGCSnC4MVcmFwSy5sn4Vz8rkwSE4XBsvnwiA5XRiskAuDW3Jh+1yck8+FQXK6MFg+FwbJ6cJghVwY3JIL22fknHwuDJLThcHyubAlnZ0uDFbIhcEtuTAelXP22TBZTh8mzWfEZDmdmLSQFZNcPCltDwafnUelwfKelQbNeVgaLO9padBix6VBLr6ZPR589lkyWU5PJs1nymQ5XZm0kC2TXPJlPE7n7DNmspzOTJrPmslyejNpIXMmueTOeLTO2WfPZDn9mTSfQZPldGjSQhZNcsmj8Zids8+kyXK6NGk+mwbr4vRp0kJGTXLRqe2x4YvTqcHyOjVoTqcGy+vUoMWcGuSiU9vDwxenU4PldWrQnE4NltepQYs5NcjFN7NHiC9OpwbL69SgOZ0aLK9TgxZzapCLTm0PEl+cTg2W16lBczo1WF6nBi3m1CAXndoeJ744nRosr1OD5nRqsLxODVrMqUEuOrU9VHxxOjVYXqcGzenUlnX1OjVoMacGuejU9mjx1enUYHmdGjSnU4PldWrQYk4NctGp7QHjq9OpwfI6NWhOpwbL69SgxZwa5OKb2WPGV6dTg+V1atCcTg2W16lBizk1yEWntoeNr06nBsvr1KA5nRosr1ODFnNqkItObY8cX51ODZbXqUFzOjVYXqcGLebUIBed2h48vjqdGiyvU4PmdGrLunmdGrSYU4NcdGp7/PjmdGqwvE4NmtOpwfI6NWgxpwa56NT2EPLN6dRgeZ0aNKdTg+V1atBiTg1y8c3sUeSb06nB8jo1aE6nBsvr1KDFnBrkolPbA8k3p1OD5XVq0JxODZbXqUGLOTXIxqmH29Npu1Y0uxF2E37t5irXdpOFd7u5ysHd5LyPu4e4+lh2s+wmPN3NVc7uJgt/93LflMu7yXmvdw9R+Vh2Q+1N+L6bq9zfTRYZwM1VScBNzucB9xA9H8tuur2JbODmqoTgJouc4OaqtOAm5zODewjnG9uNuTeRH9xclSLcZJEl3FyVKNzkfK5wD7H0sezm3ZvIGG6uShpussgbbq5KHW5yPnu4h3AmELvB9xZKIODGEgjIoQQCbiyBgPyVBIIhnAnEbgK+hRIIuLEEAnIogVjueyyBgPyVBIIhnAnEbhS+hxIIuLEEAnIogYAbSyAgfyWBYAhnArGbie+hBAJuLIGAHEog4MYSCMhfSSAYwvnGdsPxPZRAwI0lEJBDCQTcWAIB+SsJBEM4E4jdlHwPJRBwYwkE5FACATeWQED+SgLBEM4EYjcu30MJBNxYAgE5lEDAjSUQkL+SQDCEM4HYzc33UAIBN5ZAQA4lEMNtv8QSCMhfSSAYwplAJpYVSiDgxhIIyKEEAm4sgYD8lQSCIZwJZGpZoQQCbiyBgBxKIODGEgjIX0kgGML5xjPLCiUQcGMJBORQAgE3lkBA/koCwRDOBDK3rFACATeWQEAOJRBwYwkE5K8kEAzhTCALywolEHBjCQTkUAIBN5ZAQP5KAsEQzgTyalmhBAJuLIGAHEogltuIJRCQv5JAMIQzgSwtK5RAwI0lEJBDCQTcWAIB+SsJBEM4E8jKskIJBNxYAgE5lEDAjSUQkL+SQDCE843XlhVKIODGEgjIoQQCbiyBgPyVBIIhnAlkY1mhBAJuLIGAHEog4MYSCMhfSSAYwplAtpYVSiDgxhIIyKEEAm4sgYD8lQSCIZwJZGdZoQQCbiyBgBxKIJZbxRIIyF9JIBjCmUD2lhVKIODGEgjIoQQCbiyBgPyVBIIhnAnkYFmhBAJuLIGAHEog4MYSCMhfSSAYwvnGR8sKJRBwYwkE5FACATeWQED+SgLBEM4EcrKsUAIBN5ZAQA4lEHBjCQTkryQQDOFMIGfLCiUQcGMJBORQAgE3lkBA/koCwRDOBHKxrFACATeWQEAOJRDLbcYSCMhfSSAYwplArpYVSiDgxhIIyKEEAm4sgYD8lQSCIZwJ5GZZoQQCbiyBgBxKIODGEgjIX0kgGML5xm+WFUog4MYSCMihBAJuLIGA/JUEgiGcCeTdskIJBNxYAgE5lEDAjSUQkL+SQDCEM4HYp8K1m6EIQnIsg5AdCiEkx1II2V+JIRzD+42YhqXFvhIDcvA7MWDHvhRjya3gt2LA/tLXYjCGM43YJ821W6E4QnIsj5AdCiQkxxIJ2V+JJBzDmUnsM+narVAoITmWSsgOxRKSY7mE7K8EE47hfeuWpYWiCcmxbEJ2KJyQHEsnZH8lnnAMZz6xz7lrt0IBheRYQiE7FFFIjmUUsr8SUjiGN6V0LC2WUkAOphSwYykF5GBKAftLKQVjeFNK19JiKQXkYEoBO5ZSLLkdTClgfymlYAxvSulZWiylgBxMKWDHUgrIwZQC9pdSCsbwppS+pcVSCsjBlAJ2LKWAHEwpYH8ppWAM71sPLC2WUkAOphSwYykF5GBKAftLKQVjeFPK0NJiKQXkYEoBO5ZSQA6mFLC/lFIwhjeljCwtllJADqYUsGMpBeRgSgH7SykFY3hTiv2WSDuWUkAOphSwYynFkjvBlAL2l1IKxvCmFPtdkU4spYAcTClgx1IKyMGUAvaXUgrG8KYU+42RTiylgBxMKWDHUgrIwZQC9pdSCsbwvrX93kgnllJADqYUsGMpBeRgSgH7SykFY3hTiv32SCeWUkAOphSwYykF5GBKAftLKQVjeFOK/Q5JJ5ZSQA6mFLBjKQXkYEoB+0spBWN4U4r9JkknllJADqYUsGMpxZK7wZQC9pdSCsbwphT7fZJuLKWAHEwpYMdSCsjBlAL2l1IKxvCmFPutkm4spYAcTClgx1IKyMGUAvaXUgrGMG992u4Ux+47d0VC8RFVOvExRTLxEVUq8THzicTHXzoodn+5K5KIj6hSiI8pEoiPqNKHj5lPHj7+3kGx+8hdkTh8RJU2fEyRNHxElTJ8zHzC8PGvDordL+6KZOEjqlThY4pE4SL2VJrwMfNJwsevHBS7L9wTCcJHVOnBxxTJwUdUqcHHzCcGH7/noNj9355ICj6iSgk+pkgIPqJKBz5mPhn4+J63tPu8PX8qADGQCsD0pwIQA6kAzHAqAN+TCux+bs+fCkAMpAIw/akAxEAqADOcCsD3pAK7b9vzpwIQA6kATH8qADGQCsAMpwLwPanA7s/2/KkAxEAqANOfCiyxH0gFYIZTAfieVGD3Yfv+VABiIBWA6U8FIAZSAZjhVAC+JxXY/da+PxWAGEgFYPpTAYiBVABmOBWA73lLu6/a96cCEAOpAEx/KgAxkArADKcC8D2pwO6f9v2pAMRAKgDTnwpADKQCMMOpAHxPKrD7pH1/KgAxkArA9KcCEAOpAMxwKgDfkwrsfmjfnwpADKQCMP2pwBIHgVQAZjgVgO9JBXbfc+BPBSAGUgGY/lQAYiAVgBlOBeB7UoHd3xz4UwGIgVQApj8VgBhIBWCGUwH4nre0+5gDfyoAMZAKwPSnAhADqQDMcCoA35MK7H7lwJ8KQAykAjD9qQDEQCoAM5wKwPekArsvOfCnAhADqQBMfyoAMZAKwAynAvA9qcDuPw78qQDEQCoA058KLHEYSAVghlMB+J5UYJ/+N/SnAhADqQBMfyoAMZAKwAynAvA9qcA+62/oTwUgBlIBmP5UAGIgFYAZTgXge97SPtlv6E8FIAZSAZj+VABiIBWAGU4F4HtSgX2O39CfCkAMpAIw/akAxEAqADOcCsD3pAL71L6hPxWAGEgFYPpTAYiBVABmOBWA70kF9hl9Q38qADGQCsD0pwJLHAVSAZjhVAC+JxXYJ/KN/KkAxEAqANOfCkAMpAIww6kAfE8qsM/fG/lTAYiBVACmPxWAGEgFYIZTAfiet7RP2xv5UwGIgVQApj8VgBhIBWCGUwH4nlRgn6038qcCEAOpAEx/KgAxkArADKcC8D2pwD5Jb+RPBSAGUgGY/lQAYiAVgBlOBeB7UoF9bt7InwpADKQCMP2pwBLHgVQAZjgVgO9JBfYpeWN/KgAxkArA9KcCEAOpAMxwKgDfkwrsM/HG/lQAYiAVgOlPBSAGUgGY4VQAvusQuT1eP/bHAjIDuYBUfzAgM5AMSA1HAw7g+iaCPWQ/DnwVAczIdxFADXwZAczItxFAjX8dAQN4EgIebDf2RwQyAxmBVH9IIDOQEkgNxwQO4MkJeIzd2B8UyAwkBVL9UQHMSSArkBoOCxzAkxbw0LqJPy6QGcgLpPoDA5mBxEBqODJwAE9mwCPqJv7QQGYgNZDqjw1kBnIDqeHgwAFcb2qP4E8CyQHMSHIANZAcwIwkB1DjyQEDuJKDPYg/CSQHMCPJAdRAcgAzkhxAjScHDOBKDvY4/iSQHMCMJAdQA8kBzEhyADWeHDCAKznYQ/mTQHIAM5IcQA0kB8ucRpIDqPHkgAFcycEezZ8GkgOYkeQAaiA5gBlJDqDGkwMGcCUHe0B/GkgOYEaSA6iB5ABmJDmAGk8OGMD1pvaY/jSQHMCMJAdQA8kBzEhyADWeHDCAKznYw/rTQHIAM5IcQA0kBzAjyQHUeHLAAK7kYI/sTwPJAcxIcgA1kBzAjCQHUOPJAQO4koM9uD8NJAcwI8kB1EBysMxZJDmAGk8OGMCVHOzx/VkgOYAZSQ6gBpIDmJHkAGo8OWAAV3Kwh/hngeQAZiQ5gBpIDmBGkgOo8eSAAVxvao/yzwLJAcxIcgA1kBzAjCQHUOPJAQO4koM90D8LJAcwI8kB1EByADOSHECNJwcM4EoO9lj/LJAcwIwkB1ADyQHMSHIANZ4cMIArOdjD/bNAcgAzkhxADSQHy5xHkgOo8eSAAT6Tw2C0nB22581Ycezu59wEhwjR5oYI08SGCNGmhghThYYIv+eg2H3Ped9dWBAH/sKCOXQXFsSRv7BgqrgQ4Xve0u54zqfuwoI48xcWzLm7sCAu/IUFUwWFCH/poNi9zvnKXVgQ1/7CgrlxFxbErb+wYKqIEOHvHRS7yzk/uAsL4tFfWDBP7sKCePYXFkwVDiL8q4Ni9zfnN3dhQXzzFxbMd3dhLXHx4i8smCoWRPieVGB3Nhf+VABiIBWA6U8FIAZSAZjhVAC+JxXYPc2FPxWAGEgFYPpTAYiBVABmOBWA73lLu5u58KcCEAOpAEx/KgAxkArADKcC8D2pwO5jLvypAMRAKgDTnwpADKQCMMOpAHxPKrA7mAt/KgAxkArA9KcCEAOpAMxwKgDfkwrs3uXCnwpADKQCMP2pwBJfA6kAzHAqAN+TCuyu5as/FYAYSAVg+lMBiIFUAGY4FYDvSQV2v/LVnwpADKQCMP2pAMRAKgAznArA97yl3al89acCEAOpAEx/KgAxkArADKcC8D2pwO5RvvpTAYiBVACmPxWAGEgFYIZTAfieVGB3J1/9qQDEQCoA058KQAykAjDDqQB8Tyqw+5Kv/lQAYiAVgOlPBZa4DKQCMMOpAHxPKrA7kkt/KgAxkArA9KcCEAOpAMxwKgDfkwrsXuTSnwpADKQCMP2pAMRAKgAznArA97yl3YVc+lMBiIFUAKY/FYAYSAVghlMB+J5UYPcfl/5UAGIgFYDpTwUgBlIBmOFUAL4nFdjnsC39qQDEQCoA058KQAykAjDDqQB8Tyqwz2Fb+lMBiIFUAKY/FVjiKpAKwAynAvA9qcA+h23lTwUgBlIBmP5UAGIgFYAZTgXge1KBfQ7byp8KQAykAjD9qQDEQCoAM5wKwPe8pX0O28qfCkAMpAIw/akAxEAqADOcCsD3pAL7HLaVPxWAGEgFYPpTAYiBVABmOBWA70kF9jlsK38qADGQCsD0pwIQA6kAzHAqAN+TCuxz2Fb+VABiIBWA6U8FlrgOpAIww6kAfE8qsM9hW/tTAYiBVACmPxWAGEgFYIZTAfieVGCfw7b2pwIQA6kATH8qADGQCsAMpwLwPW9pn8O29qcCEAOpAEx/KgAxkArADKcC8D2pwD6Hbe1PBSAGUgGY/lQAYiAVgBlOBeB7UoF9DtvanwpADKQCMP2pAMRAKgAznArA96QC+xy2tT8VgBhIBWD6U4ElbgKpAMxwKgDfkwrwCLaNPxaQGcgFpPqDAZmBZEBqOBpwANc3Eewh+03gqwhgRr6LAGrgywhgRr6NAGr86wgYwPWm9qj9xh8RyAxkBFL9IYHMQEogNRwTOIAnJ+ARbBt/UCAzkBRI9UcFMgNZgdRwWOAAnrSAR7Bt/HGBzEBeINUfGMgMJAZSw5GBA3gyAx7BtvGHBjIDqYFUf2wAcxvIDaSGgwMHcCUHewR/G0gOYEaSA6iB5ABmJDmAGk8OGMCVHOxB/G0gOYAZSQ6gBpIDmJHkAGo8OWAA15va4/jbQHIAM5IcQA0kBzAjyQHUeHLAAK7kYA/lbwPJAcxIcgA1kBzAjCQHUOPJAQO4koM9mr8NJAcwI8kB1EByADOSHECNJwcM4EoO9oD+NpAcwIwkB1ADycEyd5HkAGo8OWAAV3Kwx/R3geQAZiQ5gBpIDmBGkgOo8eSAAVzJwR7W3wWSA5iR5ABqIDmAGUkOoMaTAwZwvak9sr8LJAcwI8kB1EByADOSHECNJwcM4EoO9uD+LpAcwIwkB1ADyQHMSHIANZ4cMIArOdjj+7tAcgAzkhxADSQHMCPJAdR4csAAruRgD/HvAskBzEhyADWQHCxzH0kOoMaTAwZwJQd7lH8fSA5gRpIDqIHkAGYkOYAaTw4YwJUc7IH+fSA5gBlJDqAGkgOYkeQAajw5YADXm9pj/ftAcgAzkhxADSQHMCPJAdR4csAAruRgD/fvA8kBzEhyADWQHMCMJAdQ48kBA/xMDtvzabXYTBTBbn3un1ODn2USg5/2nBb8LJMU/DSREvzkawlvtzj3N18ZwXpzlhG0d18ZLevw4iwjaCIN+MlVCW+3Mg9NXxnBajnLCFrbV0awOs4ygiZc30/ulfB2y/LQ95URrIGzjKANfWUEa+QsI2jC3f3k4pvZrcnD1FdGsGbOMoI295URrIWzjKAJF/eTlyW83YI8rHxlBGvtLCNoG18Zwdo6ywiacGs/uejUdqvx4HRqsLxODZrTqcHyOjVoMacGuejUdkvx4HRqsLxODZrTqS3r6HVq0GJODXLRqe3W4dHp1GB5nRo0p1OD5XVq0GJODXLRqe0W4dHp1GB5nRo0p1OD5XVq0GJODXLxzexW4NHp1GB5nRo0p1OD5XVq0GJODXLRqe2W39Hp1GB5nRo0p1OD5XVq0GJODXLRqe3W3tHp1GB5nRo0p1OD5XVq0GJODXLRqe0W3tHp1GB5nRo0p1Nb1snr1KDFnBrkolPbrbqT06nB8jo1aE6nBsvr1KDFnBrkolPbLbmT06nB8jo1aE6nBsvr1KDFnBrk4pvZrbeT06nB8jo1aE6nBsvr1KDFnBrkolPbLbaT06nB8jo1aE6nBsvr1KDFnBrkolPbrbST06nB8jo1aE6nBsvr1KDFnBrkolPbLbOT06nB8jo1aE6ntqyz16lBizk1yEWntltjZ6dTg+V1atCcTg2W16lBizk1yEWntltgZ6dTg+V1atCcTg2W16lBizk1yMU3sw/+OjudGiyvU4PmdGqwvE4NWsypQS46tX3M19np1GB5nRo0p1OD5XVq0GJODXLRqe1Dvc5OpwbL69SgOZ0aLK9TgxZzapCLTm0f4XV2OjVYXqcGzenUlnXxOjVoMacGuejU9oFdF6dTg+V1atCcTg2W16lBizk1yEWnto/nujidGiyvU4PmdGqwvE4NWsypQS6+mX0Y18Xp1GB5nRo0p1OD5XVq0GJODXLRqe2jty5OpwbL69SgOZ0aLK9TgxZzapCLTm0ftHVxOjVYXqcGzenUYHmdGrSYU4NcdGr7WK2L06nB8jo1aE6ntqyr16lBizk1yEWntg/RujqdGiyvU4PmdGqwvE4NWsypQS46tX1k1tXp1GB5nRo0p1OD5XVq0GJODXLxzewDsq5OpwbL69SgOZ0aLK9TgxZzapCLTm0fh3V1OjVYXqcGzenUYHmdGrSYU4NcdGo89+rqtGrSvF5NntOsSfO6NXkxuya7fALcnnW+eo+Ag+Y+Aw6e9xC4pd3cp8DBCx4DB7vo2nim1c1p26R5fZs8p3GT5nVu8mLWTXbRu/EEq5vTvEnzujd5Tvsmzevf5MUMnOzy29nTzzenhZPm9XDynCZOmtfFyYvZONlFH8fTqW5OIyfN6+TkOa2cNK+Xkxczc7LLbm5PQt+8bg6a283B87o5aG43By/o5mCX3dyeh7553Rw0t5uD53VzS3tzuzl4QTcHu+zm9lT0m9fNQXO7OXheNwfN7ebgBd0c7LKb27PRb143B83t5uB53Rw0t5uDF3RzsMtvZ09Iv3ndHDS3m4PndXPQ3G4OXtDNwS67uT0n/eZ1c9Dcbg6e181Bc7s5eEE3B7vs5va09JvXzUFzuzl4XjcHze3m4AXdHOyym9sz029eNwfN7ebged3c0t7dbg5e0M3BLru5PTn97nVz0NxuDp7XzUFzuzl4QTcHu+zm9vz0u9fNQXO7OXheNwfN7ebgBd0c7PLb2VPU7143B83t5uB53Rw0t5uDF3RzsMtubs9Sv3vdHDS3m4PndXPQ3G4OXtDNwS67uT1R/e51c9Dcbg6e181Bc7s5eEE3B7vs5vZc9bvXzUFzuzl4Xjc3tM6L283BC7o52GU3X1qC181Bc7s5eF43B83t5uAF3RzsspuvLMHr5qC53Rw8r5uD5nZz8IJuDvbPt5suViuLe7GwZw8vgo1zF9HPfl0EG5cuooU3FznLDKxhYavaggC8ri8I0JvaggC8rS8I0MJfi5x9BlZZ2KG2IAAf6wsC9Km2IACf6wsCtPDIIueagTUt7FZbEIDf6gsC9HttQSy48VJfEKCFzxU5VQbWsrBmbUEAbtUXBOh2bUEA7tQXBGjhVUVOLwNrW1i/tiAAD+oLAvSwtiAAj+oLArTwmyInN3THwupdBuCCywBd7zIAF1wGaJfLgJNzma6F1bsMwAWXAbreZQAuuAzQLpcBJ+cyPQurdxmACy4DdL3LAFxwGaBdLgNOzmX6FlbvMgAXXAboepex4KrgMkC7XAacnMsMLKzeZQAuuAzQ9S4DcMFlgHa5DDg5lxlaWL3LAFxwGaDrXQbggssA7XIZcHJDjyys3mUALrgM0PUuA3DBZYB2uQw4OZcZW1i9ywBccBmg610G4ILLAO1yGXByLjOxsHqXAbjgMkDXuwzABZcB2uUy4ORcZmph9S4DcMFlgK53GQtuFlwGaJfLgJNzmZmF1bsMwAWXAbreZQAuuAzQLpcBJ+cycwurdxmACy4DdL3LAFxwGaBdLgNObuiFhdW7DMAFlwG63mUALrgM0C6XASfnMvZv4M16lwG44DJA17sMwAWXAdrlMuDkXMb+HbtZ7zIAF1wG6HqXAbjgMkC7XAacnMvYv0U3610G4ILLAF3vMhbcKrgM0C6XASfnMmsLq3cZgAsuA3S9ywBccBmgXS4DTs5lNhZW7zIAF1wG6HqXAbjgMkC7XAac3NBbC6t3GYALLgN0vcsAXHAZoF0uA07OZXYWVu8yABdcBuh6lwG44DJAu1wGnJzL7C2s3mUALrgM0PUuA3DBZYB2uQw4OZc5WFi9ywBccBmg613GgtsFlwHa5TLg5FzmaGH1LgNwwWWArncZgAsuA7TLZcDJuczJwupdBuCCywBd7zIAF1wGaJfLgJMb+mxh9S4DcMFlgK53GYALLgO0y2XAybnMxcLqXQbggssAXe8yABdcBmiXy4CTc5mrhdW7DMAFlwG63mUALrgM0C6XASfnMjcLq3cZgAsuA3S9y1hwp+AyQLtcBpycy7xZWL3LAFxwGaDrXQbggssA7XIZcHIu825h9S4DcMFlgK53GYALLgO0y2XAyR5OskevOvU2Q3TBZwivNxqiC05DuMtqSMqeNLMHsDqFo2ZAl86aAV44bAZ06bQZ4L7jZiDlHMc+cKHTqbccogueQ3i96RBdcB3CXbZDUs537KMTOp164yG64DyE11sP0N2C9xDuMh+Scu5jH4LQ6dbbD9EF/yG83oCILjgQ4S4LIinnQfZxBp1uvQkRXXAhwuttiOiCDxHuMiKSsoPb41ndghMBXXIiwAtOBHTJiQD3ORFIWSeyh7S6BScCuuREgBecCOiSEwHucyKQsk5kj2p1C04EdMmJAC84EdAlJwLc50QgZZ3IHtjqFpwI6JITAV5wIovulZwIcJ8TgZR1Intsq1dwIqBLTgR4wYmALjkR4D4nAinrRPbwVq/gRECXnAjwghMBXXIiwH1OBFJ2cHuEq1dwIqBLTgR4wYmALjkR4D4nAinrRPYgV6/gRECXnAjwghMBXXIiwH1OBFLWiexxrl7BiYAuORHgBScCuuREgPucCKSsE9lDXb2CEwFdciLAC05k0f2SEwHucyKQsk5kj3b1C04EdMmJAC84EdAlJwLc50QgZZ3IHvDqF5wI6JITAV5wIqBLTgS4z4lAyg5uj3n1C04EdMmJAC84EdAlJwLc50QgZZ3IHvbqF5wI6JITAV5wIqBLTgS4z4lAyjqRPfLVLzgR0CUnArzgRECXnAhwnxOBlHUie/CrX3AioEtOBHjBiSx6UHIiwH1OBNJPJxqdD8eP76GPJ9PBeXUyiGcPqsMZ96kDtp9l1QE7BrHbLjanycEgumJuCtdTc1PAvpqbAg4MYnA+bc3LQzGxBDRSs0pQYzWlBPXz5eH2cL/034+nt9Xkj2+b7WZiQM8GUYAadyhg588zLGAXAnTcrhZjg3rNTjTFLvMzTcGr/FRT8PoZNdyeTtt1VtcmnXGBsRXzLlB2YvYFyj6PTQUfSiJSyrGoIuWcijJSzvkZfBiMF+cjGps9jTi4pFo8tKvQ4+HdhCYP761IsIcKB+9OXZY2fPHqAq/h1QVeVSTYs4HDplMXaC2vLvDaXl3gdYoEe8Rv2HXqAq3n1QVe36sLvEGRYE/qDYdOXaCNvLrAG3t1gVcm2AN3Q+GRHprySw9PeaeHtygS7Lm5obBUD025q4enjNbDWxcJ9vjbUBivh6bc18NTFuzh7YsEe4ptKLzYQ1N+7OEpT/bwyr5sD6MNvb4MmtuXwXP7MnhlX7ZnyoZeX7a0kduXwXP7MnhlX7ZHw0ZeXwbN7cvguX0ZvKIvV/Zs18jpy6R5fZk8ry+TV/Tlyh7OGjl9mTSvL5Pn9WXyDOG03X1fTaYnT2IeCYMO8ZVThwZQlh0aYOFn2lQ9EiYe4is3Dw2gbD00wNrPtMl7JIw+xFeOHxpAWX9ogL2fadP5SISBEF+lgtAAKh6EBjj7mTbBj0RgCPFVcggNoCJEaIA3P9Om/JEIFRH+WKWL0AAqZoQGqPxM+0lgLIJHiK8SSGgAFUVCA3T8TPtpYSzCSYivUkpoABVXQgMM/Ez7iWIsAkyIr5JMaAAVaUIDBJj2U8c4nG3Aj2cbDBDPNhggkG3sJ5NxONuAH882GCCebTBAINvYTy/jcLYBP55tMEA822AAf7bBJ5xxNNuQH842HCCcbTiAP9vgU9A4mm3ID2cbDhDONhwgyTaHxWzu+hg0zoQb9wCTXLrxj5CLN/4RknxTQ7UfhSaZgOMfIJdw/CPkIo5/hCTj1FDtx6FJJuT4B8ilHP8IuZjjHyHJOTVU+5Fokgk6/gFyScc/Qi7q+EeIUO3Hokkm7PgHyKUd/wi5uOMfIck7NVT70WiSCTz+AXKJxz9CLvL4R0gyTw3VfjyaZEKPf4Bc6vGPkIs9/hGS3FNDtR+RJpng4x8gl3z8I+Sij3+EJPvUUO3HpEkm/PgHyKUf/wi5+OMfIZJ/7EelSTz/2AGmX8g/GOEL+QcjRPKP/bg0jecfDPCF/IMRvpB/MEIk/9iPTNN4/sEAX8g/GOEL+QcjBPIPPjZNw/mHA8TzD0eI5x+OEKHaj07TcP7hAPH8wxHi+YcjmPzzeYjPuxE2FQkoOoTKQNExVAqKjqHOino3xab5w6PuIWpOk7rHqDle6h5DnTf1bpBN8+dP3UPUnEd1j1FzPtU9xjlEth+qpiIZRYdQ2Sg6hkpH0THeQmT74WoqElJwiJnKSNExVEqKjlGFyPZD1kwkpegQKitFx1BpKTpGJ0S2H7ZmIjFFh1CZKTqGSk3RMQYhsv3QNRPJKTqEyk7RMVR6io4RI9sPXzORoKJDqAwVHUOlqOgYsRxlP4TNvpKjMMSXchTG+FKOwhixHGU/jM2+kqMwxJdyFMb4Uo7CGLEcZT+Uzb6SozDEl3IUxvhSjsIYoRyFD2ezL+QoDvGVHMUxvpKjOEYoR+FD2uwLOQpDzL+SozjGV3IUx1A5yr1bN88HKf8YNUnKP0hNlPIPorKUe+dung9T/jFq0pR/kJo45R9E5Sn3Lt48H6j8Y9QkKv8gNZHKP0iQbT+xzfOhyj9GTaryD1ITq/yDqFzl3t2b54OVf4yaZOUfpCZa+QdR2cq90zfPhyv/GDXpyj9ITbzyD6LylXvXb54PWP4xahKWf5CaiOUfRGUs9w7gPB+y/GPUpCz/IDUxyz+Iylnu3cB5Pmi5x1jUJC3/IDVRyz9IMGvZT3KLL2UtjPG1rIVBvpa1MEgwa9lPc4svZS2M8bWshUG+lrUwSDBr2U90iy9lLYzxtayFQb6WtTBIjI1PdYuvZC2O8aWsxUG+lLU4SCxr4ZPd4itZi2N8KWtxkC9lLQ7ynLWwguwP6y3SXFWPFxmqniDyUj1hn0fa38BbpDmoHi8yTz1B5Jt6gsgy9WKz8aWelk8s9bx8SKnniVxSX4hsFKmlvebTRz0vHzjqeTw/VFuFV31kqJ6TOSVUT8ocDKon8SxQvXJ9/KeekznxU0/KHPKpJxmPvy7Gp/kf3152N4MRTp5BKr/OQJUrZ6AK0wBGOGwGqXw0A1VumYEuFOZvbaCE92WxyuOyYOVlWfBaoCpgxF8BMkj1WT8DVZ/oM9C9wLSAEZ/OM0j1GTwDVZ+0M1D1eTqzhPMfnjOEmk/KGUbNx+IMQ30Gzizv/AdeTVjWfLrNMGo+ymYY6nNrbtEv8x9Ts5SaT6VZTs2H0CxHfebUt8Uy/wEzQ6j5NJlh1Hx0zDDU50R9yyzzHwozhJpPgBlGzce9DOMndLrdnL5PB+vF6g2R327HLM3jl70k+xRmL8sYkJu1KMDtlsry1aUHpKVPD1grnx6wfvrVxxynq+31j2/zxXg82RjIs13VAo1b1SKNWdUi94AsNvPJYWGecbs8yAkq5FHPUEFPeooKegbmODpsVysDucgpCuBVz1Agb3qCAvkGyGVxXAxX5hmny3c5QYFcvegZKmhDT1FBK2D4cN5VU04wgbX07BJcW08twXUM4PtNLdJVV8wtA+2p+WWwfTXHDHaQgMRKXQ0zE1XYUW6mCjzOTVWBU1S6aFfTzFQFdJabqcDOcxMV2EUCUiv3NTNRhV3mZqrAq9xUFXidoJKlrPq4BMo+LpGyj0uk7ePf3+QiVo08A5WdPIOVrTyDPScgtYJVO89hZUfPgWVTz4HfEpRYxKqxa+hadvYMVrb2DLZKQGIFr1WDz2Fll8+BZavPgTsJikt5Lbu9Auper5C60yvkr88Dt+/H+WD8w01/pLvZZLOYfP7b8ft6srH702v74SDKxieFKB0fG6J0H+/H/+/P1dn+etJ6GhCeGWIWUZ8ZYx4pQWaMhYs8WU0ug9Nia/8YuX4N1CEzxDJSh8wYq0gdMmOsXeTTdrs6LezHnfUmUAU5wDZSAznCLlIBOcI+ofInC9aHjM4EeMzpSZCn3LwT5Dkj7efr9qDd+lJ7RSTlWn8NJOdWX3XJ+emvq8Vm8n0++di1/ONbwwCevTUP2xhfrcEZT63BVQLQsX932TSzUyOylZ8doe38BAntpJgKfyPddHNzTJC97BwTaD87xwQ6EJgeMMPsHIkc5edI6Dg/R0IFpslaT3NzTJCz7BwT6Dw7xwS6SDHMLZvX3BwT5DI7xwS6ys4xgf70jNNhsDkuPhwFfxWzv+i0ebYJL8c4g5dkzMBL2tej7Y7q5uDRAs7RpQWkk0sLSOd6tHX+zcWjBZyrSwtIN5cWkN6A/j4+Hwbly/kuRfnI2xetzsluaJlOduWk2Uu+bYb0gtyK6QW7HdMLdsdJs8ti2w3pBbkX0wt2P6YX7J/+ONgs1oPAqnh2zCjXeGiUbFw1SnaysCKmEa3gzkJaQZ6HtIK88LGwGl4jWsFdhrSCvApp/Un+3+vJeDH4+GPUZLK5k8bf/mu92PzapOy07lHwrz/G+3yX6qeu+/irxWzzfXGa3D8ZfZuuJvcPCqfB4fS/7i/+zxP8puCjyc+fODTQZjM78mQzJrivwMfTYXIazYmdKuxwcJx8JCGCV3Lg3WA0+T44bM/pTGRBfhKGk9N18vF3U8uwNblPY1pTwVZToGUBW/3cuGn9WlOB1eVrrQQ0U73WQQ2bL15LlaKudu1f1Xg9H0+L6VtxAbb7miAr2J7WjJ4Wsb3ScF3H9kGjM6Vs3zKD56vZyRSnrqAd1qewHDssUc2C7LA+tUuyw/rULcoOq1O7LLssTHFhdnVZ6irZ/VWZH7+LW1yY3ZWCyzp2D9mR0zJ2bwqsq9hrKmymiL2+HDhfw54sSF0Je7Ymo+29GPdPS/ki9g6aIMvYu9WMnhay39RwXcp+X6MzxexPM4Pny9nPFKeuoP1f9flxzOW4eJ8gBFR/JeNWYDTJGDQLjFbC6BcY7YQxLTA6CWNVYHQTRqlWvYRRqlWfjGGpVoOEUarVMGGUajVKGKVajRNGqVaThFGq1ZSMkanV9fPvVYYzSzj9ImeecKZFziLhrIqc14RzKHKWCedX1daDw+wey399yeEFuHFT434cVrXIvkZWKXKqka0UudLIToo8aGQvRWaUN14S6CQnPtU0yahvpKImGfmNVNUko7+RyppkClAJWZkKVOlcp5kKVOkEppkKNNNiTTMVaKYVmGYq0EplTTMVaIm5ZirQTkedZSrQTmXNMhVop7JmmQp0xARy90B6tWaZCnTFXDMV6KXQeaYCvbSu89xd8JLqmudug5dU2Dx3H4gVM88UoSEu7jy7Dv4TyEWmCD93OSw0U4Tz5jhhzFygCB8PEEqb8GKlUGkLXhwULr2ii5vCpWV/bSpcWvLXvsKly+NVqhWN91ULTpW8SsWi6b5KyaLlLqVm0XCXUrRot0upWjTbpVQtWu1SqhaNdilVi5tmJVWLJruSqkWLXUnV4h5cSdWiva6katFcV1K1aK1rvb7TK7OWqkVbXUvVoqmupWrRUtd6hYuGutZLXLTTjV7jYl1spHDVSjeZ681GupHCRRvdSOGqiW4g/PAzALOLbpsSlrbRbV8C04u4nUpgWvDtSgLTem8PEpgui63WLHrpLiM7lbPTukU33Wnhop3utHLRT3daumioO61ddNS91i5a6l5rFz11r7WLm2evtYuuutfaRVvda+3ihjxo7aKxHrR20VkPWrtorYfMik+v0UFrF831oLWL7nrU2kV7PWbWvOivx8yiFw32mFn1YpEctXzVYo+5a88ee9LyRZM9afmqy54g/8d379ljTysBSjvs6SBg6WU83QQsrfa5KWBppc99AUtXxFnpFH31LKWmIs5Kq+ipZyVWdNSLUiv66UXJFd30ovSKXnpRekUnvSi9oo9elF5xg1yVXtFDr0qv6KBXpVfcbVelV3TPq9IreudV6RWd8yZXc3o9bkqv6Jo3pVf0zJvSKzrmTa5n0S9vckGLbvkmV7RYCm9KsuqUb/oas0++KcmiS74pyapHvv2S/OuRBHj9vWlfr/h6376e1up9ahHp9XlfWYRoSe8HQNJSv0OJaDCNF6pJL0TjBYpEY2m8QFOVTqfxAlWi8TReIEs0ncYLdIlV1mhAl2g2jQavlHivBnS1hPYGdImG1WhAl2hCjQZ0tcV7VdAlmlSjgi7RoBoVdInm1KigSzSmRsVlKJpIo+JCVKus2eSCViAuxa7Q3+RaFB2w0eRi7At1Ta7Gnno7XrakRzVa1PYiMJD2cdDqcxs3gULgenDLQtlJXl4u3J1utNKLeLkmIMgUPbbRhs7H1y0B+yX11zlz9tjG46zN40R/glgBIRbw41DNL4xYB4+TNI/vYIh18Dg7Y7+oARBVqX7bSYSJVd6hNtVxOxSnWm6H6lTP7VKdarpdqlNdt0t1qu12kyun3o7qVOPtUp3qvD2qU623R3Wq9/aoTjXfHtWpNtajOtV+e1Sn+m8/WZmqAfeTpamWXZ/6ZAvuJ4tT9eB+sjpVE+4ny1N14UGyPlUbHiSXMO2xg0ShaMQDCqzpxAPKrGnFg6TTqF48FBc0bcZDilXdeEi1mXY8/B2hb48HcSWgQwpKmvLwloLEyh41U5hYHaN+ClPdeTQVOLFCRkKn6tEjJVXcCSOhVnXqsZCrmvVY6FX9eiz0qpY9FnpV1x4Lvapxj9XVFe87EXpV+54IvaqDT4Re1cQnQq/q4xOhV7XyidCrOuJU6FUNfSr0qp4+VetZtfWpWtBqpU6FYtncp2pJq/4+U2tatfiZWtSqy8/UqlaNfqYuc9rGZ0qzaPczIbmm48+F8JqmP1c9TPX9ub7oaeufC/mq+8+F/owB/D5CsXh8uSMxgN+nJ36DEgP4fW7iN0jcCb+PTPyGibXz+8zEb5gygN9nJp5wYuUshE5lAK9KqrhbXoVaZQCvQq4ygFehVxnAq9CrDOBV6FUGsBR6lQEs1dUV77sUepUBLIVeZQBLoVcZwFLoVQawEnqVAayEXtU1V0KvMoCV0KsMYKXWszKAlVrQaqWuhWJpAGu1pJUBrNWaVgawVotaGcBarWplAGt1mdPGvlGahQFshOQaA9gI4TUGsFE9TBnARl/01AA2Qr4ygK3QnzGA7bNLZf8os50KVGIB25VAiZthexA4sX62N4FTLrBrKqBYPzulVvnATgoWd81OaVZOsFOilRXslGrlBXulWpnBXqlWbrBXqpUd7OWVVm+tVCtD2CvVyhEOSrWyhINSrTzhoFQrUzgo1aqVHpRqZQsHpVr5wlGucGUMR7nE1dI9Kt3SGo5ykStvOMpVrszhKJe5coeTXOfKHk7ykqd9/ySVC4M4KeE1DnFS8mss4iQ7nPKIc2YBpCZxVkVQLnFWVcjYxPnZy7I2cT4IVGIT55tAiZvj0hQ4sZIufYFTNnGZKqBYRxelVtnERQoWd9BFaVY2cVWilU1clWplE1elWtnEValWNnFVqpVNXOWVFm99U6qVTdyUamUTN6Va2cRNqVY2cVOqlU3clGrVVt+UamUTb0q1sok3ucKVTbzJJa6W7pvSLW3iTS5yZRPvcpUrm3iXy1zZxLtc58om3uUlT7v/u1QubOJdCc/bRPWi5OdtonqRHU7YRPWSWQCJTVQvqgjCJqoXVQVtE9XjfMZuMB4vNrPsFxOrxykNItPjhtXjtAax6SqoHqc2iE1vq+pxeoPYdM1Uj1McxKZrtmrkqiDOIVZVthBCXZWrhDiRWFW5UgjLq6pcLYTtVVWuGKJ/VFWuGsL+qmauGsLZqmauGsLdqmauGsLhqmauGsLlqmauGsKXqmauGuIcXNXKVUMYWdXKVUN4VNXKVUP09aqVvU/EFWzlqiH8qmrlqiFOOFbtXDWEb1Tt7J0i3LBqZ28VceCxamfvFbWW2rmCqKOPVTu/Pmg7VSdXENXGO7mCqJOQVYcF0V9trDosRe7LjVWHZch9vbHqsAS5LzhWXRYg9xXHqkv1uS85Vl2tXLXubka80NTV6lXb7mr5qmn3tH7Vsnu6AKph93QFVLvu6QqoZt3TFVCtuqcroG6uvq6AatN9XQHVpPu6Aup+7esKqAbd1xVQ7bmvK6Ca8yBzD4irNdAVUI15oCug2vJAV0A15UHmLlAteZC5DVRDHmbuA7VihroIshkPc+sgacVDXQTViIe6CLIND1mEzJcjqxErkP16ZDViAbJfkKxG1J/9imQ1YgGyX5KsRixA9muS1SijX3Xjca4EQtg4UwPVj8eZIqiGPM5UQXXkcaYMqiWPM3VQPXmSqYNqypNMHVRXnmTqoG6ySaYOqi9PMnVQjXmSqYO6eaeZOqjWPM3UQfXmaaYOqjlPc3eFuG7TTB1Ue55m6qD68yxTB9WgZ7n7QnXoWe7GUC16lrsz1PKZZUohm/QsuyaSLj3PlEK16XmmFLJPz1kK+fXKas4iZL5gWc1ZgMxXLKs5xWe+ZFktKD3zNctqQd2ZL1pWC6lZdeaFli3kLKRu1ZUXUrjqya9SuerIr1K66sevUrvqxq9Su+rFr1K76sSvUru6kZZSu+rCS6ld9eCl1K7uzKXUrvrvUmpX3Xcptaveu9IrXlyjldSu+u5KaldddyW1q5670mteddyVXvSq3671qleLZC3ly167zlz7pNOupXzVZ9dSvuyya8gXHXbTJER0102fIHEBN1OCRJU3K4JEfTcHgsQq2CTaVCfdpvLE1LeJPtVBt4lA1T23iULVObeJRNU1t4lG1TF3iUbVLXeJRtUpd4lGdQPsEo2qQ+4Sjao77hKN6j7aJxpVV9wnGlVH3CcaVTfcpytV1H6faFRdcJ9oVB3wkGhU3e+QrlXV+Q7pYlVd75CuVnXBD4lM2e0O4lomne6YyFRd7pjIlB3ucSQnu2/2OIpTs1/2OIRTs0/2OH5Tsz/2OHhTsy/2OHJTsx92oirV2k6JMDHrE5WpxnaiNNXXztSm2tqZ4lRXO1OdampnqlM97Ux1qqWdqU4t8AvVqYZ2oTrVzy5Up26UC9WpbnahOtXMLlSnetk1WZei4leqU53sSnWqkV2pTvWxa7IyVRu7JktTdbFbsjbVNb5RoOxht/T6JS3sRoGqg90oUDawx9mXzH7R48hLdp/ocdYluz/0OOSS3Rd6HG7J7gc9DrVk94HerBLVst4hRsz13apR7erdylHN6t3qUa3q3QpSjerdKhJtqvliFYkm1XyxikSLar5YRWLxNl+sItGemi9WkWhOzRerSKz/ZsMqEo2p2bCKRFtqNqwi0ZSaDaw5Ud2GVSQaUrNhFYl21KysItGMmhVWnWhFzQrLTjSiZoV1p65kZUWpJtSseJ3YgppNK0o0oGbTilLtp/k45JHZJ2k+DnZk90eaj+Mc2X2R5uMQR3Y/pPk4upHdB2k+Dmxk9z+aLegRXajZoiQx4RY0iT7UbEGUaETNNlSJTtRsQ5ZoRc02dKle1IYu1Yza0KW6URu61CLuQJfqRx3oUg2pA13qZuhAl2pJHehSPakDXaopdbkKRZ270KXaUhe6VF/qQpdqTF2uQ9WZulyIqjX1uBLVZe1BmmxOveSaJd2pB2mqPfUgTfanx8kGuT/QfJxmyOwLNB9nGDL7Ac3HyYXMPkDzcV4h8/f/5uOUQubv/s2+0aA60sDKENMcGB2qGw2MENWLBkaJ6kQDI0X1oYHRorrQ0GhRPWhotKgONDRa1EIdGi2q+wyNFtV7hkaLWukjo0X1nZHRorrOyGhRPWdkV5io6choUf1mZLSobjM2WlSvGds1pjrN2C4y1WfGdpWpizc2cmSPGePaJB1mYuSo/jIxcmR3wU+TiAaDXySRPQY/RSLbDH6DRHYa/PiIbDb41RHZb6ZUpVrONBEmZj2lMtV4ppSmes+M2lT7mVGc6kAzqlNNaEZ1qg/NqE61ohnVqQU9pzrVkOZUp3rSnOrUzTGnOtWZ5lSnmtOc6lR/WiTrUlR8QXWqSy2oTjWqBdWpXrVIVqZqV4tkaaqO9ZqsTXWNXylQ9q3X9PolreuVAlX3eqVA2cAeG9vv3xeb8eR2nxUhjx3tB4TfL2w+trIfkGYCmRKiJv3Yv/49nZeXpKc+9q6fUFWKSqW9NBPUKlF3v8QpKhHYeGmnqERj46WTooTGbooSGnsp6pfG2UCl28eW9I+XhfM8NqJ/AMS99Nh+/gEQa/+x7fwDIJb9Y7f5B0DciWujQVnNxsoQ09wYHcpkNkaIcpiNUaLsZWOkKG/ZGC3KWLZGi3KVrdGiLGVrtKheszValJlsjRblJFujRfWqndGiPGRntCgD2Rktyj12doWJmu6MFuUbO6NFmcbeaFGOsbdrTNnF3i4y5RV7u8rUxdsbOdIl9rg2iUUcjBzVag9GjjSHxxbwz199nR8Wm6XoMo8tYAMT3eaxCWyA4mI8toENUFTzsRVsgKKmj91gAxRX+Sg1q6501LKFnKPUrbrUUQpX3eoklauudZLSVfc6Se2qi52kdtXNTlK76monqV3dIGepXXW5s9Suut1Zalf33llqV93vLLWrLniW2lU3vOgVL67RRWpX3fEitasueZHaVbe86DWvuuZFL3rVPa961atFcpXyZTe9Zq590lWvUr7qrlcpX3bZ67N8kb9vTfN6Er5vffN6krxvRt318NHuN9uP/50gVylS4g4a9/0wuUwOR/7CdvOxRT1eHHerwdvH+ye/w918bFQ/UMPVdrRMYH3CPmaRoKZELTYfP/79XYJXGbCewIHo2WHBnwhvviWaf45J3O9fuJgvTpPvP35CPHd9Hlvbp8nt9H17r/V0tb3+8W2yWi12x8UxwU+f8YPVYnb/GPixl5cAVwL446/qCfIgkPI33puPze9n6Ov5eFpM34BtPXbBL4vjYrhYLU73gv347ytWrPXYDn/GzhfjcfKb660Xs/THi8NkdFpsP7Rt+XSG1ssqgx1tV+d1OvShFp65FVqP/fPPQvz+8fifjeI0OLDmrceGesKRhW89dtf1e0yS37NvPTbbE8bxdJicRnzoReux9Z4QhoPjRKzz1mMnPn2LjyX/fXDYnsXEsuX6yRpOTtdJet1/P+Fhe1z8vCyD4fF+YU7JvH4/3+EBnS5uk2Qmvx/t8MAdJqvBaXFJh1wl0PvkR8tk1f9+qMMT8D7kKAH+KsN2+HpfZ9+ni4+Lfy/FYJFof+zrW+wlXSeP7f3tYTw5pMG+9djb/wTQmlqPvf3t/Wr8uA+FF7Ye2/sPVPpOtwTyt+TdHhv8TyC6Xeuxxf8EaiegaQrqJqBE3OeM/uc//vd6Ml4Mvh1Hh/vi+zbYjL/91/NTRjv3PPTXH+TPsarj51A/uuD3e6NfH2vu+OpNwXWXbWVHTu/z5kCB9S3enCls5u5uruXA+Ru7KQtSd083bU3u05jW9cyWQOtuOciNK/rkTGAzHXItoLneeFTD1nRFVYq62rVb6KKlBdgeaIKsYHtWM3paxPZaw3Ud20eNzpSy/ZYZPF/NTqY4dQXtsD6F5dhhiWoWZIf1qV2SHdanblF2WJ3aZdllYYoLs6vLUlfJ7q/K3DPyHVRamN21gss6do/ZkdMydt8UWFex11LYTBF7AzlwvoY9WZC6EvZsTcqBsnfUBFnG3lvN6Gkh+y0N16XsDzQ6U8z+LDN4vpz9THHqCtr/VZ/pHf39uHi/fyC7DA7/9f37pz1XfyXjrcBokjFoFRithDEoMNoJY1ZgdBLGusDoJoxSrXoJo1SrPhnDUq0GCaNUq2HCKNVqlDBKtRonjFKtJgmjVKspGSNTq+vnswMNZ5ZwBkXOPOHMipxFwlkXOa8J51jkLBPOr6p9/vpo7ptd45bGpTsX44FGpn8hHc80Mv1b5nitkemfMsdHjUz/6jrOKBfbF5Oc+FTTJKNebGBMMvLFDsYko19sYUwyBRB7GJNMBcQmxjRTAbGLMc1UQGxjTDMVEH+inmYqIDYyppkKiJ2MaaYC4g/fs0wFxF7GLFMBsZkxy1RA7GbMcvdAerVmmQqI/YxZpgJiQ2OeqYDY0Zjn7gKxpTHP3QZiT2Oeuw/EiplniqB2NebZdcBtjUWmCOJvOYtMEdTGxgJF0N9PW6wVKm3Bi6PCpVd08aZwadlfWwqXlvx1oHDp8niVakXjfdWCUyWvUrFouq9Ssmi5S6lZNNylFC3a7VKqFs12KVWLVruUqkWjXUrV4qZZSdWiya6katFiV1K1uAdXUrVoryupWjTXlVQtWutar+/0yqylatFW11K1aKprqVq01LVe4aKhrvUSF+10o9e4WBcbKVy10k3merORbqRw0UY3UrhqohsIz3zLbtuSsLSNbgcSmF7E7UwC04Jv1xKY1nt7lMB0WWy1ZtFLdxnZqZyd1i266U4LF+10p5WLfrrT0kVD3WntoqPutXbRUvdau+ipe61d3Dx7rV101b3WLtrqXmsXN+RBaxeN9aC1i8560NpFaz1kVnx6jQ5au2iuB61ddNej1i7a6zGz5kV/PWYWvWiwx8yqF4vkqOWrFnvMXXv22JOWL5rsSctXXfYE+fK7gqe1AKUd9nQUsPQynt4ELK32uSVgaaXPAwFLV8RZ6RR99SylpiLOSqvoqWclVnTUi1Ir+ulFyRXd9KL0il56UXpFJ70ovaKPXpRecYNclV7RQ69Kr+igV6VX3G1XpVd0z6vSK3rnVekVnfMmV3N6PW5Kr+iaN6VX9Myb0is65k2uZ9Evb3JBi275Jle0WApvSrLqlG/6GrNPvinJoku+KcmqR779kpz5zeL3ln2d5xTfB/b1tFbvM4tIr8/72iJES3o/ApKW+h1K1M+MvVCN+PGlFyhSPy72Ak3qd8VeoEr9pNgLZKlfE3uBLvVDYg3oUr8h1uCVEu/VgC71y2EN6FI/GtaALvV7YQ3oUj8VVkGX+pWwCrrUD2pV0KV+G6yCLvWzYBWXofpFsIoLUa2yZosLWoG4FNVPgDW5FtWvfzW5GNUPfzW5GtVvfjV52dJf8WpRm/ilrxak1fwWZAsCa34GssVOon4BspVexPTHH1uQqX73sQ2dmZ98fBy7yf7c4+OsTfanHh/Ha2p+5vFxqKbmJx4fJ2nqft7xcXam7qcdO1Sl+m0nESZWeYfaVMftUJxquR2qUz23S3Wq6XapTnXdLtWptttNrpx6O6pTjbdLdarz9qhOtd4e1ane26M61Xx7VKfaWI/qVPvtUZ3qv/1kZaoG3E+Wplp2feqTLbifLE7Vg/vJ6lRNuJ8sT9WFB8n6VG14kFzCtMcOEoWiEQ8osKYTDyizphUPkk6jevFQXNC0GQ8pVnXjIdVm2vHwd4S+/Trbm3Tk4TEFJU15+JaCxMoetVKYWB2jQQpT3Xk0EzixQkZCp+rRIyVV3AkjoVZ16rGQq5r1WOhV/Xos9KqWPRZ6VdceC72qcY/V1RXvOxF6VfueCL2qg0+EXtXEJ0Kv6uMToVe18onQqzriVOhVDX0q9KqePlXrWbX1qVrQaqVOhWLZ3KdqSav+PlNrWrX4mVrUqsvP1KpWjX6mLnPaxmdKs2j3MyG5puPPhfCapj9XPUz1/bm+6Gnrnwv5qvvPhf6MAfw+QrF4fLkjMYDfpyd+gxID+H1u4jdI3Am/j0z8hom18/vMxG+YMoDfZyaecGLlLIROZQCvSqq4W16FWmUAr0KuMoBXoVcZwKvQqwzgVehVBrAUepUBLNXVFe+7FHqVASyFXmUAS6FXGcBS6FUGsBJ6lQGshF7VNVdCrzKAldCrDGCl1rMygJVa0GqlroViaQBrtaSVAazVmlYGsFaLWhnAWq1qZQBrdZnTxr5RmoUBbITkGgPYCOE1BrBRPUwZwEZf9NQANkK+MoCt0J8xgO2zS2X/KLOdCVRiAdu1QImbYXsUOLF+tm8Cp1xg11JAsX52Sq3ygZ0ULO6andKsnGCnRCsr2CnVygv2SrUyg71Srdxgr1QrO9jLK63eWqlWhrBXqpUjHJRqZQkHpVp5wkGpVqZwUKpVKz0o1coWDkq18oWjXOHKGI5yiaule1S6pTUc5SJX3nCUq1yZw1Euc+UOJ7nOlT2c5CVP+/5JKhcGcVLCaxzipOTXWMRJdjjlEefMAkhN4qyKoFzirKqQsYnzs5dlbeJ8FKjEJs5vAiVujktL4MRKugwETtnEZaaAYh1dlFplExcpWNxBF6VZ2cRViVY2cVWqlU1clWplE1elWtnEValWNnGVV1q89U2pVjZxU6qVTdyUamUTN6Va2cRNqVY2cVOqVVt9U6qVTbwp1com3uQKVzbxJpe4WrpvSre0iTe5yJVNvMtVrmziXS5zZRPvcp0rm3iXlzzt/u9SubCJdyU8bxPVi5Kft4nqRXY4YRPVS2YBJDZRvagiqN9oelFV0DZRPc5n/PrdzexPzj1OaRApfr3pcVqDWPHbSI9TG8SKH0l6nN4gVvxa0uMUB7HiZ5MauSqo33uqsoUQ6qpcJdRvQFW5Uqhfg6pytVC/C1XliqF+IarKVUP9pF0zVw3103bNXDXUT9w1c9VQP4PWzFVD/eRdM1cN9dN3zVw11O+stXLVUD+F18pVQ/0kXitXDfXTeK3sfSKuYCtXDfVTea1cNdRP5rVz1VA/ndfO3inqJ/Ta2VtF/ZReO3uvqLXUzhVE/rReO78+kp/Y6+QKotp4J1cQ+ZN7HRYk89N7HZYi+xN8HZYh+1N8HZYg+5N8XRYg+9N8XarP/kRfVytXrbubES80dbV61ba7Wr5q2j2tX7Xsni6Aatg9XQHVrnv/f2Hnspy6kizQ+f2KM+we+AZI4tWj+yt6gSSEJPQCE9H/frG3d+HKXClG3RE7BaysrJU+rsLJGSBZ7zkDpOo9Z4A214EzQJo+cAZI0gfOAO3XA2eABH3gDJCeD5wBknNs7AFYrZgzQGKOOQOk5ZgzQFKOjV1ASo6NbUBCTox9QBWTcBJQxolVB0rFCSeBRJxwElDDiUyC8eXIIJUZML8eGaQyAeYXJINU8ptfkQxSmQDzS5JBKhNgfk0ySA1+snFmpQDAMiMH5OPMSAIJOTOyQEbOjDSQkjMjD+Tk3MgDSTk38kBWzo080CbLjTyQl3MjDyTm3MgDbd6jkQdS89HIA7n5aOSB5Hy0dgWs29HIA+n5aOSB/Hwy8kCCPln7ggx9sjYGKfpk7Qwqn5ORCpT0yawJZenCSAVpujBSgZ4uZCrw65VBIZNgfMEyKGQCjK9YBoWEN75kGZQS3fiaZVBKbuOLlkGJzGTmkrEBp0RusnKJ4OTkCsnJyBWik48rZCcbV8hOLq6QnUxcITttpDOyk4XPyE4OPiM77cwzspN/z8hO9j0jO7m35oqHNaqRnbxbIztZt0Z2cm7NNU/GrbnoybcXrnoqkgvio2svxtor014Qnzx7QXy07EXgg2GbSIaAXZtYBsECNicZBFluLjII8tsMMgiqoFFsZNJW48FHbxUfGbRVgGTPVhGSOVuFSNZsFSMZs1OMZMtOMZIpO8VIG6BTjGTITjGSHTvFSPvoqhjJilfFSEa8Kkay4VVXKuT+qhjJglfFSAbsFSPZr9e1SubrdbGS9XpdrbTgvcJE2/Wwlsp0g8Ikyw0KEw3nruSY52buKs7CeZm7hLNwTuau3yycj7mLNwvnYu7KzcJ52CipSG2jAoNPPUoyEtso0chrk2QjrU0Sjqw2STqS2iTpyGmTpCOlTZKOCnyWdCS0WdKRz2ZJRxtllnRks1nSkcxmSUcuu6m6hIzfJB2Z7CbpSGQ3SUceu6nKJI3dVGmSxe6qNmmN7xIQHXbX66cUdpeAZLC7BESBubsvxnmRu/JinhO5uy7m+ZC75GKeC7nLLeZ5kLvUYp4DffokpKyHgIHP+vBpSFcPH4dk9fB5SFUPH4hE9fCJaOjhyieiaYcrn4jGHK58Ihpdt/KJaLDhyieiiYYrn4gG3619IpphuPaJaHjh2ieiqYVrUXOQ3bVPRHMK1z4RDSgMfCKaTBiIqqORhIEoO5pFGIi6o5UMfCicPhjIdVJjB0MfiuYNhj4UDhp0lzyMc5LQXewwz0dCd53DPBcJ3SUO8zwkdFc3zHOQ0F3YMM8/wkjw0JDWSCLBB44EEw1mjQQUjWTdCCoaxroRWDSGdSO4yEUbwUUy2ggustFGcFERbwUX+WgruEhIW8FFm2EruEhJW8FFTtoKLpLSTlYh5HknuEhLO8FFXtoJLhLTTtYhmWknC5HUtJeVSMu6F2gop71aM2WnvUAjPe0FGvrJ3WzA84HQ3WYwzgVCd4fBOA8I3c0F4xwgdPcVjN//h+6WgvF7//DgMZCRYh8DPmbscZCNYg+EXBR7JGSi2EMhD8UeC1ko8VjIQYnHQgZKPBYq1MRjIfskHgu5J/FYqNJTj4W8k3osZJ3UYyHnpH6FQU5Tj4V8k3osZJvMYyHXZH6NkWkyv8jIM5lfZbR4mYeDjsnE2ijD5B4O+SX3cNAuYjQJCEZMJEHHiFEkqBkxgwRNI4aPoGzE1BH0zVFSkXKOCgw+9VGSkXiOEo3cc5JspJ+ThCMDnSQdSegk6chDJ0lHKjpJOiroQtKRkApJR04qJB1tjkLSkZkKSUdyKiQd+alUdQkZLyUdWaqUdCSqUtKRq0pVmaSrUpUmGatStUlrXElA9Fal10+pq5KAZK9KAqLA3MH246NsMhwV7060XYiaFu+Osl2IGhjvzrBdCH1od379+jirlXKqO7v+FRXoKI22ClVUreieS6yjFOB6tdFRinG92uooYNzpKGDc66i/jKeYfrp1R9Lf/wydxx1EfwfAXnLHz98BUPvu2Pk7AMrenTZ/B8BOvHgM1GoaHwM+ZuNxUJNpPBDqMI1HQu2l8VCotzQeCzWW1mOhrtJ6LNRSWo+FXNN6LNRMWo+FOknrsZCrOo+FekjnsVAD6TwW6h6dX2GQ085job7ReSzUNK4eC3WMq19j1C6ufpFRr7j6VUaLd/VwsEtcxdqoFtF7OKTa3sPB5uCOgP9MfS36sjmDZdwRsBcGtnGHwF4gLIY7BvYCIZvuKNgLhJy602AvEFZ5QGay0sDYgDMgN1lqQHCy1YjkZK0R0cleI7KTxUZkJ5uNyE5WG5GdNsiE7GS5CdnJdhOy096bkJ3sNyE7WXBCdrLhzBUPazQjO9lxRnay5IzsZMuZa56sOXPRkz1vXPVUJDfER5vejLVXVr0hPtn1hvho2dtvfPj5+x55/65++L7H3r+rn7zvHt2t/9J90379r4q86EiMGzjuo8/nvB/khO3QHVFn5dDV8efX+6s53KE7qHZRSd2mZxUWy7CvT6GiTjKqbL6Gf39g8MUI5g8wyOhTX8oR4eGnYv7zmjLuNeGiKMf843uEuLU+7mh7zO/jR/vM9bFub//5J6/rshvKQcWffsfHdXl6/mfg11meCrxA4Pdv1VXkAJE44z10h9+/Q6tpGMvjp4iN3Cn4XA5lUtbl+EzY9/+vZcYidxz+O7Yos0zNXI9WXulnZZ+nY9l+sbXyrzNEq4sRm7b1dNEvPSyGG1shcufnP4l4DY//I4ox7mXOI3egrp7BxEfudJ3fI1fz7CN32K6eGMY+H1P5Ry8id/SuHkjiIYc6j9xJvH6Lr5L/iPt2gg9mpuvPU0k+3nK97q+/8NAO5Z9liZPhuTCj+lyvv+/gQo/lPVef5PWnHVxcn9fxWM76JS8q9Pnh07Oq+tcfdfgV+HzJVAX+TUObVM86+ziWX4v/TEVcKnZ3ru/HzrpO3PF+22d5r3+wj9zZ/k+AbE2RO9tvn6vxvQ+hF0bueN9F6Xf6VCH/q97NHfD/CpLdLnJH/L+CNiropIN2KkjB/Xyi//7P/13yrIz/GdL+WXz/xE32z7+8PyT59SPzv7+f/nmxYPx5rW8NfjxNfxkWtnzwoHDW7MZ8Zb3Rw4SCeY+HBcUa2zts8IXtnR1iQpY2dejn5PkxjkvS3EA06zKxXhdEWUCsocgGQi05jvSyC1qkVCzlbrMRGn1XgJuEH8AMboqFV9dJ3DQcznncjBxtpHLzMF7czubWSM5SQrcyP2/KcStTtFCQW5mfxZLcyvwsFeVWZmexLHcyMW8Lc8dpWcrk7m9mnj8kP4PeFeauoXDM4240X1mncfegYM7ifkOxRhL3Cb6wncM9JmQphXs/J+9/otyP/ACmcf9YeHWdyMOGwzmVh4SjjWQeCuPF7XQejOQsJfTwNz/HZ/THUD6e/0U2x/2/Pj5+2nPwb/nE480ToXwi3rx5IlJPJG+e2KgnijdPbNUTzZsnduqJd7naqyfe5eogn0je5SpWT7zLVaKeeJerVD3xLleZeuJdrnL1xLtcHeUTqZer288fD/SeOalnkrfPFOqZ4u0zpXqmeftMpZ4Z3z5zVs/8zdrP+FHrq13ZhuP00UWWcKT+FWlWcKT+ZWbWcKT+XWY2cqT+tWtmkMP5RW7Ba6bcoIcTjNzAhyOM3OCHM4zcSAAcYuRGBuAU42hkAI4xjkYG4BzjaGQAfkd9NDIAJxlHIwNwlHE0MgC/+T4ZGYDDjJORATjNOBkZgOOMk7UH9GqdjAzAgcbJyACcaBRGBuBIo7B2AZxpFNY2gEONwtoHUDGFkQQ61ijMOpDnGqWRBPhlTmkkgU42SpEE/oJa2VCUVnA5Upxe0fJBcTrt1YbidMqrhOJ0eVRIC+KtGFiTVEgM0q0QGZR7RmYQ7hmhQbdnpAbZnpEaVHtGahDtGalh09RIDZKtkRoUWyM17MEaqUGvNVKDXGukBrVeuL71ylyQGrR6QWqQ6gWpQakXrnAQ6oVLHHTacI1DXTQITiptjPWWIm0QHDTaIDhJtBHgxtfs2g2GaY22CQbqRWwLDNQJbxsM1PluRwzUZdEyM7i0M7A1TsfcYNOOwUGnHZODTztGB6F2zA5GvTI7KPXK7ODUK7PD5rkyO1j1yuyg1Suzw4bsmR3E2jM7mLVndlBrb1S8XqOe2UGuPbODXQdmB70ORs2DXwej6EGwg1H1UCQD45NiB2vtpWNHxgfJjoxPlh0FPn5ZcGwgSBt2HCFML+P4gDCd7WkDYTrTUwJhuiIm4gSvToiqISZiBadOBAtGnYkWfDoTLth0Jl5w6Uy8YNKZeMGjM/HCBrkRLzj0Rrxg0Bvxwm67ES/Y80a84M4b8YI571jNej3uxAvWvBMvOPNOvGDMO9Yz+PKOBQ22/MSKhlL4JGQy5SevsfTkJyGDJT8JmRz5+RfZGFr82Pj/Li8qPhL/33WuHoUfodfn0fgRoKTHKEJ0qh+ChOaMrSQNTF9aCSKaLrYSTDRYbCWoaKbYSmDROLGV4KJJYmvBRUPE1nKl4L3WgotGh60FF00NWwsuGhi2Flw0KywQXDQmLBBcNFErEFw0HCwQXDQXLJBlSCPBAlmIVGXhRhY0BclSpBlgoaxFGv8VymKkyV+hrEYa+hXKZdNjvCLJBqO+IoG2MAwyEoALcyAjaRIaARnpRdTTHyOBSYMfN4LTmPnort2Y8x7dXRtz1qO7XrMw59FdqlmY8ehu0izNd3R3Z5ZmO24lFfl2q8CgyreSjYy7lXCk3K2kI+fuJB1JdyfpyLo7SUfa3amVo7eTdCTenaQj8+4lHal3L+nIvXtJR/LdSzrS2F7SkX73ko78e1CVSQI+qNKksjtIPlTwQRUnOfigqpMkfFDlSRaOVX2ShmO1hNqxsSIEEccScMHEscRcUHGsTEMuTmBBtYwTCUs2TiStoePk9SP0/e/lXmXkZNRBSsrJQwdBZacbHQbVkSY6jOycFhAHFZICJzk6JVTYCSnQkqkzwCVZZ8BLvs6Al5SdAS9ZOwNeEndGqwvvmwMv6TsHXjJ4Drwk8Rx4yeM58JLKc+AlIx6Bl4R+BF5y+pHqmbR+pIKmSj0CMcr9SCVNfj9RTZPiT1TUZPkTVTWJ/kTLrDV+ImbQ/QmQF4xfAPiC9AtyGHm/4EXX6i8An+xfAL/RAF5XKEr37Q7VAF63J15BqgG87k28gmAnvK5MvMKgdl53Jl5h1ABedyZ+xUHllMBJDaAiVNgtFdBSA6gAlxpABbzUACrgpQZQAS81gDPwUgM40+rC+56BlxrAGXipAZyBlxrAGXipAdTASw2gBl6yZg281ABq4KUGUFM9UwOoqaCpUi9AjA3gQiVNDeBCNU0N4EJFTQ3gQlVNDeBCy6zF3hAzNIAGkBcaQAPgCw2gIYdRA2h40XUDaACfGkAL/EYDaH93KfOXMm0BUaoFtA1EwWZoR4iD+mkfEEddoNtQINRPR7TUBzoEhl3TETN1go6gqRV0RE294ErU1AyuRE3d4ErU1A6uuNL01kRNDeFK1NQReqKmltATNfWEnqipKfRETSrtiZraQk/U1BcGrHBqDAOWOJXuQNzYGgYscuoNA1Y5NYcBy5y6w4h1Tu1hxCXX3h+RHBrESOALHWIk/IUWMaLhqEdMRgHoJjFREqhLTJQFo01Mv3uZ2SamEaJUm5geEAWbY95AHFTSnEActYm5oECoo5loqU3MCAw7aCZmahM3gqY2cSNqahM3oqY2cSNqahM3oqY2ccOVhre+EzW1iTtRU5u4EzW1iTtRU5u4EzW1iTtRk1Y/iZraxCdRU5v4xAqnNvGJJU6l+0nc2CY+scipTTywyqlNPLDMqU08sM6pTTxwybX9H0gObeJB4HabCFaEb7eJYIWGgzYRrIwCUG0iWFESaEjTirLAbSJw9zP+Dt40Z865WxoyEsY3udsaMhaGI7lbGzIWpiS52xsyFsYluVscMhbmJq2tLNDAp8BMBNAFViZoCFRgpYLGQQVWLmgwVGAlg0ZEBVY2aKZdaGWDZtuFVjZoxl1oZYPmoIVWNmjmXWhlg2bfhVY2aNBaZGWDZuFFVjZoJl5kZYNm40XmPoEVjKxs0Ky8yMoGzczbWNmg2Xkbc6fQDL2NuVVolt7G3CtUSxsrIThbb2PXh5qxt7USQhrfWgnBmXtbmRBj9t5WpsKcwbeVaTBn8W1lCsyZfDuZAHM2307SmzP6dkxO6t4Z8MC0Y3rS9o7xSdp75idl7zkBJOw9Z4B0vecMkKz3nAFS9Z4zQJvrwBkgTR84AyTpA2eA9uuBM0CCPnAGSM8HzgDJOTb2AKxWzBkgMcecAdJyzBkgKcfGLiAlx8Y2ICEnxj6gikk4CSjjxKoDpeKEk0AiTjgJqOFEJsH4cmSQygyYX48MUpkA8wuSQSr5za9IBqlMgPklySCVCTC/JhmkBj/ZOLNSAGCZkQPycWYkgYScGVkgI2dGGkjJmZEHcnJu5IGknBt5ICvnRh5ok+VGHsjLuZEHEnNu5IE279HIA6n5aOSB3Hw08kByPlq7AtbtaOSB9Hw08kB+Phl5IEGfrH1Bhj5ZG4MUfbJ2BpXPyUgFSvpk1oSydGGkgjRdGKlATxcyFfj1yqCQSTC+YBkUMgHGVyyDQsIbX7IMSolufM0yKCW38UXLoERmMnPJ2IBTIjdZuURwcnKF5GTkCtHJxxWyk40rZCcXV8hOJq6QnTbSGdnJwmdkJwefkZ125hnZyb9nZCf7npGd3FtzxcMa1chO3q2RnaxbIzs5t+aaJ+PWXPTk2wtXPRXJBfHRtRdj7ZVpL4hPnr0gPlr2IvDBsM1GhoBdm0QGwQI2hQyCLDeNDIL8NqMMgipoFBuZtNV48NFbxUcGbRUg2bNVhGTOViGSNVvFSMbsFCPZslOMZMpOMdIG6BQjGbJTjGTHTjHSProqRrLiVTGSEa+KkWx41ZUKub8qRrLgVTGSAXvFSPbrda2S+XpdrGS9XlcrLXivMNF2PaylMt2gMMlyg8JEw7krOea5mbuKs3Be5i7hLJyTues3C+dj7uLNwrmYu3KzcB42SipS26jA4FOPkozENko08tok2Uhrk4Qjq02SjqQ2STpy2iTpSGmTpKMCnyUdCW2WdOSzWdLRRpklHdlslnQks1nSkctuqi4h4zdJRya7SToS2U3SkcduqjJJYzdVmmSxu6pNWuO7BESH3fX6KYXdJSAZ7C4BUWDu7otxXuSuvJjnRO6ui3k+5C65mOdC7nKLeR7kLrWY50CfPgkp6yFg4LM+fBrS1cPHIVk9fB5S1cMHIlE9fCKaerjyiWjc4conojmHK5+IZtetfCKabLjyiWik4conosl3a5+IhhiufSKaXrj2iWhs4VrUHGR37RPRoMK1T0QTCgOfiEYTBqLqaCZhIMqOhhEGou5oJQMfCscPBnKd1NzB0IeigYOhD4WTBt0lD+OcJHQXO8zzkdBd5zDPRUJ3icM8Dwnd1Q3zHCR0FzbM848wEjw0pTWSSPCBI8FEk1kjAUUzWTeCiqaxbgQWzWHdCC5y0UZwkYw2gotstBFcVMRbwUU+2gouEtJWcNFm2AouUtJWcJGTtoKLpLSTVQh53gku0tJOcJGXdoKLxLSTdUhm2slCJDXtZSXSsu4FGsppr9ZM2Wkv0EhPe4GGfnI3G/B8IHS3GYxzgdDdYTDOA0J3c8E4BwjdfQXj9/+hu6Vg/N4/PHgMZKTYx4CPGXscZKPYAyEXxR4JmSj2UMhDscdCFko8FnJQ4rGQgRKPhQo18VjIPonHQu5JPBaq9NRjIe+kHgtZJ/VYyDmpX2GQ09RjId+kHgvZJvNYyDWZX2NkmswvMvJM5lcZLV7m4aBjMrE2yjC5h0N+yT0ctIsYTQKCERNJ0DFiFAlqRswgQdOI4SMoGzF1BH1zlFSknKMCg099lGQknqNEI/ecJBvp5yThyEAnSUcSOkk68tBJ0pGKTpKOCrqQdCSkQtKRkwpJR5ujkHRkpkLSkZwKSUd+KlVdQsZLSUeWKiUdiaqUdOSqUlUm6apUpUnGqlRt0hpXEhC9Ven1U+qqJCDZq5KAKDB3sP34KJsMZ8W7E20XosbFu6NsF6ImxrszbBdCH9qdX78+zmqlnOrOrn9FBTpKo61CFVUruucS6ygFuF5tdJRiXK+2OgoYdzoKGPc66i/jKaafbt2R9Pc/Q+dxB9HfAbCX3PHzdwDUvjt2/g6Asnenzd8BsBMvHgO1msbHgI/ZeBzUZBoPhDpM45FQe2k8FOotjcdCjaX1WKirtB4LtZTWYyHXtB4LNZPWY6FO0nos5KrOY6Ee0nks1EA6j4W6R+dXGOS081iob3QeCzWNq8dCHePq1xi1i6tfZNQrrn6V0eJdPRzsElexNqpF9B4Oqbb3cLA5uCPgP1Nfi75szmAZdwTshYFt3CGwFwiL4Y6BvUDIpjsK9gIhp+402AuEVR6Qmaw0MDbgDMhNlhoQnGw1IjlZa0R0steI7GSxEdnJZiOyk9VGZKcNMiE7WW5CdrLdhOy09yZkJ/tNyE4WnJCdbDhzxcMazchOdpyRnSw5IzvZcuaaJ2vOXPRkzxtXPRXJDfHRpjdj7ZVVb4hPdr0hPlr29hsffv6+b7x/Vz983xPv39VP3neP7tZ/6b5pv/5XRTY6EuNGjvvo8znvBzlhO3RH1Fk5dHX8+fX+ag536A6qXVRSt+lZhSUy7OtTqKhCRpXN1/DvDwxujGD+AKOMPvWlHBEefirmP68p414TLopyzD++R4hb6+OOtsf8Pn60z1wf6/b2n3/yui67oRxUfPE7Pq7L0/M/A7/O8lRgA4Hfv1VXkSNE4oz30B1+/w6tpmEsj58iNnKn4HM5lElZl+MzYd//v5YZi9xx+O/YoswyNXM9Wnmln5V9no5l+8XWyr/OEK0aIzZt6+miX3pcDDe2QuTOz38S8Roe/0cUY9zLnEfuQF09g4mP3Ok6v0eu5tlH7rBdPTGMfT6m8o9eRO7oXT2QxEMOdR65k3j9Fl8l/xH37QQfzEzXn6eSfLzlet1ff+GhHco/yxInw3NhRvW5Xn/fwYUey3uuPsnrTzu4uD6v47Gc9Us2KvT54dOzqvrXH3X4Ffh8yVQF/k1Dm1TPOvs4ll+L/0xFXCp2d67vx866Ttzxfttnea9/sI/c2f5PgGxNkTvbb5+r8b0PoRdG7njfRel3eqiQ/1Xv5g74fwXJbhe5I/5fQRsVVOignQpScD+f6L//83+XPCvjf4a0fxbfP3GT/fMv74+C7p8/ZPz7++mfFwumn9f61uDH0/SXYWHLhysKZ81uzVfWGz1MKZj3eFhSrLG9wxZf2N7ZISZkcVP7OXl+jOOSNLcQzbpMrdcFUZYQayiyhVBLjhO9rJ28DaViKXebrdDouwLcpPwAZnBTLry6TuKm5XDO42biaCOV25Xx4nY2t0ZylhK6lfl5U45bmaKFgtzK/CyW5FbmZ6kodzI7i2W5k4l5W5g7TstSJnd/M/P8IfkZ9K4wdy2FYx53k/nKOo37FQVzFvdbijWSuE/xhe0c7jEhSync+zl5/xPlfuIHMI2H1cKr60QethzOqTykHG0k81AaL26n82AkZymhh7/5OT6jP4by8fwvsjnu//Xx8dPNg3+LJ+LVmydC9cT2zROReiJ988RGPVG+eWKrnmjfPLFTT7zL1V4+kbzL1UE98S5XsXriXa4S9cS7XKXqiXe5ytQT73KVyyfSd7k6qie8XN1+/nig98xJPZO+faZQz5RvnynVM+3bZyr1zPT2mbN8JvubtZ/xo9ZXu7Itx+mjiyzlSP0r0qzkSP3LzKzlSP27zGziSP1r19wgh/OL3ILXTLlBDycYuYEPRxi5wQ9nGLmRADjEOBoZgFOMo5EBOMY4GhmAc4yjkQH4HfXRyACcZByNDMBRxsnIAPzm+2RkAA4zTkYG4DTjZGQAjjNO1h7Qq3UyMgAHGoWRATjRKIwMwJFGYe0CONMorG0AhxqFtQ+gYgojCXSsUZp1IM81SiMJ8Muc0kgCnWyUIgn8BbWypSit4HKiOL2i1YridNqrLcXplFcpxenyqJAWxFsxMJAgMUj3jMig3DMyg3DPCA26PSM1yPaM1KDaM1KDaGukhk1TIzVItkZqUGyN1LAHa6QGvdZIDXK9IDWo9cL1rVfmgtSg1QtSg1QvSA1KvXCFg1AbLnHQacM1DnXRIDiptDHWW4q0QXDQaIPgJNFWgBtfs2u3GKY12qYYqBexLTFQJ7xtMVDnu50wUJdFx8zg0s7A1jgdc4NNOwYHnXZMDj7tGB2EemV2MOqV2UGpV2YHp16ZHTbPldnBqldmB632zA4bsmd2EGvP7GDWntlBrb1R8XqNemYHuQ7MDnYdmB30Ohg1D34djKIHwQ5G1UORDIxPih2ttZeOHRkfJDsyPll2FPj4ZcGxhSBt2HGCML2M0wrCdLanLYTpTE8phOmKmIgTvDohKkAQKzh1Jlgw6ky04NOZcMGmM/GCS2fiBZPOxAsevREvbJAb8YJDb8QLBr0RL+y2G/GCPW/EC+68Ey+Y847VrNfjTrxgzTvxgjPvxAvGvGM9gy8/saDBlp9Y0VAKn4RMpvzkNZae/CRksOQnIZMjH3+RjaHFj63/7/Ki4iP1/13n6lH6EXp9Hq0fAUp6TCIExhGtBAoNGltJHBi/tBJINF5sJaBosthKYNFQsZXgonlia8FFo8TWgoumiK3lUtF7CS6aHbYWXDQ2bC24aGJYILhoWFgguGhOWCC4aKRWILhoOlgguGgwWCDrkGaChbIQqcrCraxoCpKlSEPAQlmLNP8rlMVIo79CWY009SuSy6bneEWSDWZ9RQJtYRpkJAAXBkFGUiU0AzLSi6jHP24EJk1+3AhOY+iju3djDnx0l23MYY/ufs3CoEd3q2ZhyKO7SrM04NFdnlka7riVVOTbrQKDKt9KNjLuVsKRcneSjpy7k3Qk3Z2kI+vuJB1pd6dWjt5O0pF495KOzLuXdKTevaQj9+4lHcl3L+lIY3tJR/o9SDry70FVJgn4oEqTyu4g+VDBB1Wc5OCDqk6ScKzKkywcq/okDcdqCbVjY0UIIo4l4IKJY4m5oOJEmYZcnMCCahknEpZsnEhaQ8fJ62fo+9/bvcrIyaSDlJTTlQ6Cyk63OgyqI011GNk5LSEOKiQFTnJ0SqiwEzKgJVNngEuyzoCXfJ0BLyk7A16ydga8JO6cVhfeNwde0ncOvGTwHHhJ4jnwksdz4CWVH4GXjHgEXhL6EXjJ6UeqZ9L6kQqaKvUIxCj3E5U0+f1ENU2KP1FRk+VPVNUk+hMts9b4iZhB9wUgLxi/APAF6RfkMPJ+wYuu1V8APtm/AH6jAbzuUJTu6x2qAbyuT7yCVAN4XZx4BcFOeN2ZeIVB7bwuTZS/vnYCcRPEQeVUwEkNoCJU2C0V0FIDqACXGkAFvNQAKuClBnAGXmoAZ+ClBnCm1aX3BV5qAGfgpQZwBl5qADXwUgOogZcaQA28ZM0aeKkB1MBLDaCmeqYGcKGCpkq9ADE2gAuVNDWAC9U0NYALFTU1gAtVNTWAhpZZi70hZmgADSAvNIAGwBcaQEMOowbQ8KLrBtACPjWAFviNBtD+7lLmL2XaEqJUC2hbiILN0E4QB/XTrSCOukC3pUCon45oqQ90CAy7piNm6gQdQVMruBI19YIrUVMzuBI1dYMrUVM7uOJK01sTNTWEnqipI/RETS2hJ2rqCT1RU1PoiZpU2hM1tYWBqKkvDFjh1BgGLHEq3YG4sTUMWOTUGwascmoOI5Y5dYcR65zaw4hLrr0/Ijk0iJHAFzrESPgLLWJCw1GPmIwC0E1ioiRQl5goC0abmH73MrNNTBNEqTYxryAKNse8hTiopDmFOGoTc0mBUEcz0VKbmBEYdtCNmKlN3Aia2sSNqKlN3Iia2sSNqKlN3Iia2sQdVxre+k7U1CbuRE1t4k7U1CbuRE1t4k7U1CY+iZq0+knU1CY+iZraxCdWOLWJTyxxKt1P4sY28cAipzbxwCqnNvHAMqc28cA6pzbxwCXX9n8guW4TwYrA7TYRrAjfbhPBCg0HbSJYGQWg2kSwoiTQlKYVZYHbRODuZ/ydvGkOnXO3NGQkzG9ytzVkLExHcrc2ZCyMSXK3N2QszEtytzhkLAxOCqws0MSnwEwE0AVWJmgKVGClguZBBVYuaDJUYCWDZkSFVjZoqF1oZYOG24VWNmjIXWhlgwahhVY2aOhdaGWDht9FVjZo0lpkZYOG4UVWNmgoXmRlg4bjReY+gRWMrGzQsLyNlQ0amrexskHD8zbmTqEhehtzq9AwvY25V6iWNlZCcLje1q4P1Xa2VkJI41srITh0bysTYgzf28pUmEP4tjIN5jC+nUyBOZRvJxNgDufbSXpzSN+OyUndOwOemJietL1nfJL2nvlJ2XtOAAl7zxkgXe85AyTrPWeAVH3gDNDmOnAGSNMHzgBJ+sAZoP164AyQoA+cAdJzzBkgOcfGHoDVijkDJOaYM0BajjkDJOXY2AWk5MTYBiTkxNgHVDEJJwFlnFh1oFSccBJIxAknATWcyiQY344MUpkB8/uRQSoTYH5DMkglv/kdySCVCTC/JRmkMgHm9ySDzOAnG2dWCgAsM3JAPs6MJJCQMyMLZOTMSAMpOTfyQE7OjTyQlHMjD2Tl3MgDbbLcyAN5OTfyQGI+GnmgzXs08kBqPhp5IDcfjTyQnI/WroB1Oxp5ID2fjDyQn09GHkjQJ2tfkKFP1sYgRZ+snUHlczJSgZIuzJpQli6MVJCmCyMV6OlCpgK/XxkUMgnGNyyDQibA+I5lUEp441uWQSnRje9ZBqXkNr5pGZTITGYuGZtwkJusXCE4OblCcjJyhejk4wrZycYVspOLK2QnE5+RnTbSGdnJwmdkJwefkZ125hnZyb9nZCf71shO7q254mGNamQn79bITtatkZ2cW3PNk3EvXPTk2wtXPRXJBfHRtRdj7ZVpL4hPnr0gPlq2Efhg2GYrQ8CuTSqDYAGbUgZBlptWBkF+m0kGQRW0io1M2mo8+Oit4iODtgqQ7NkqQjJnqxDJmp1iJGN2ipFs2SlGMmWnGGkDdIqRDNkpRrLjVTHSProqRrLiVTGSEa+KkWx41ZUKub8qRrJgrxjJgL1iJPv1ulbJfL0uVrJer6uVFrxXmGi7AdZSmW5QmGS5QWGi4dyVHPPczF3FWTgvc5dwFs7J3PWbhfMxd/Fm4VzMXblZOA8bJRWpbVRg9KklGYltkmjktUmykdYmCUdWmyQdSW2SdOS0SdKR0mZJRwU+SzoS2izpyGezpKONMks6stks6UhmN0lHLrupuoSM3yQdmewm6UhkN0lHHrupyiSN3VVpksXuqjZpje8SEB121+unFHaXgGSwuwREgbm7L8Z5kbvyYp4Tubsu5vmQu+Ringu5yy3meZC71GKeAz18ElLWQ8DAZ334NKSrh49Dsnr4PKSqhw9E0w9XPhGNPVz5RDTvcOUT0aDDlU9Ew+tWPhGNNlz5RDTTcO0T0ei7tU9EUwzXPhGNL1z7RDS3cC1qDrK79oloUmHgE9GIwsAnotmEgag6GkoYiLKjaYSBqDtaycCHwvmDoVwnNXgw9KFo4mDoQ+GoQXfJwzgnCd3FDvN8JHTXOcxzkdBd4jDPQ0J3dcM8BwndhQ3z/COMBA+NaY0kEn1gwUSjWTcCioaybgQVjWPdCCxS0UZwkYs2gotktBFcZKOt4KIi3gou8tFWcJGQtoKLNsNWcJGStoKLnLQTXCSlnaxCyPNOcJGWdoKLvLQTXCSmnaxDMtNeFiKpaS8rkZZ1L9BQTnu1ZspOe4FGetoLNPSTu9mA5wOhu81gnAuE7g6DcR4QupsLxjlA6O4rGL//D90tBeP3/mHsMZCRYh8DPmbscZCNYg+EXBR7JGSi2EMhDyUeC1ko8VjIQYnHQgZKPBYq1MRjIfskHgu5J/VYqNJTj4W8k3osZJ3UYyHnpH6FQU5Tj4V8k3ksZJvMYyHXZH6NkWkyv8jIM5lfZbR4mYeDjsnF2ijD5B4O+SX3cNAuYjYJCEaMJEHHiFkkqBkxhARNI6aPoGzE2BH0zVFSkXKOCow+tSQj8ZwkGrnnJNlIPycJRwY6STqS0EnSkYdOko5UVEg6KuhC0pGQCklHTiokHW2OQtKRmQpJR3IqJR35qVR1CRkvJR1ZqpR0JKpS0pGrSlWZpKtKlSYZq1K1SWtcSUD0VqXXT6mrkoBkr0oCosDcwfbjo2wyHBbvTrRdiJoX746yXYgaGe/OsF0IfWh3fv36OKuVcqo7u/4VFaioWqOtQh2l6J5LrKMU4Hq10VGKcb3a6ihg3OkoYNyrKHc8fYrpp1t3JP39z9B53EH0dwDsJXf8/B0Ate+Onb8DoOzdafN3AOzExmOgVtP4GPAxG4+DmkzjgVCHaTwSai+Nh0K9pfVYqLG0Hgt1ldZjoZbSeizkmtZjoWbSeizUSTqPhVzVeSzUQzqPhRpI57FQ9+j8CoOcdh4L9Y2rx0JN4+qxUMe4+jVG7eLqFxn1iqtfZbR4Vw8Hu0Qv1ka1iN7DIdX2Hg42B3cE/Gfsa9GXzRks446AvTCwjTsE9gJhMdwxsBcI2XRHwV4g5NSdBnuBsMoDMpOVBsYmHOQmS40ITrYakZysNSI62WtEdrLYiOxksxHZyWoTstMGmZCdLDchO9luQnbaexOyk/0mZCcLzshONpy54mGNZmQnO87ITpackZ1sOXPNkzVvXPRkzxtXPRXJDfHRpjdj7ZVVb4hPdr0hPlr2/hsffv6+b71/Vz9831Pv39VP3neP7tZ/6b5pv/5XRbY6EuMmjvvo8znvBzliO3RH1Fk5dHX8+fX+ahB36A6qXVRSt+lZhaUy7OtTqKhSRpXN1/TvDwxujWD+AJOMPvWlnBEePhTzn9dUce6vuBflmH98zxC31scdbY/5ffxon7k+1u3tP//kdV12Qzmo+PJ3fFyXp+d/Bn6d5anAFgK/f6uuIieIxCHvkTv8/h1aTcNYHj9V7N8szOVQJmVdjs+Eff//WmYscsfhv2OLMsvU0PVo5ZV+VvZ5OpbtF1sr/zpDtGqN2LStp4t+6Wkx3NgKkTs//0nEa3r8H1GMcS9zHrkDdfUMJ96drvN75GqgfeQO29UTw9jnYyr/6EXkjt7VA0k85FDnkTuJ12/xVfIfcd9O+oMFZrr+PJXk4y3X6/76Cw/tUP5ZljgZngszqs/1+vsOLvRY3nP9SUoV1+d1PJazfslWhT4/fHpWVf/6ow6/Ap8vmcpAd5rfJtWzzj6O5dfiP1MRl4rdnev7sbOuE3e83/ZZ3usf7CN3tv8TIFtT5M722+dqfO9D6IWRO953Ueqd3PH+K+R/1bu5A/5fQbLbRe6I/1fQRgWVOminghTczyf67//83yXPyvifIe2fxfdP3GT//Ov3H5LcfP088u/vp39eLJh/Xutbgx9P01+GhS0frikcd3u4M19Zb/Qwo2De42FFscb2Djt8YXtnh5iQxU3t5+T5MY5L0txBNOsys14XRFlBrKHIDkItOc70snbyNpSKpdxtdkKj7wpwk/EDmMFNtfDqOombjsM5j5uZo41UbtfGi9vZ3BrJWUroVubnTTluZYoWCnIr87NYkluZn6Wi3MnsLJblTibmbWHuOC1Lmdz9zczzh+Rn0LvC3HUUjnnczeYr6zTu1xTMWdzvKNZI4j7DF7ZzuMeELKVw7+fk/U+U+5kfwDQe1guvrhN52HE4p/KQcbSRzENlvLidzoORnKWEHv7m5/iM/hjKx/O/yOa4/9fHx083D/4tnojXb54I1RO7N09E6onszRMb9UT15omteqJ788ROPfEuV3v5RPIuVwf1xLtcxeqJd7lK1BPvcpWqJ97lKlNPvMtVLp9I3+XqqJ7wcnX7+eOB3jMn9Uz29plCPVO9faZUz3Rvn6nUM/PbZ87ymexv1n7mj1pf7cp2HKePLrKMI/WvSLOKI/UvM7OOI/XvMrOZI/WvXXODHM4vcgteM+UGPZxg5AY+HGHkBj+cYeRGAuAQ42hkAE4xjkYG4BjjaGQAzjGORgbgd9RHIwNwknE0MgBHGScjA/Cb75ORATjMOBkZgNOMk5EBOM44WXtAr9bJyAAcaBRGBuBEozAyAEcahbUL4EyjsLYBHGoU1j6AiimMJNCxRmnWgTzXKI0kwC9zSiMJdLJRiiTwF9TKjqK0gsuZ4vSKVmuK02mvdhSnU15lFKfLo0JaEG/FwECCxCDdMyKDcs/IDMI9IzTo9ozUINszUoNqz0gNoq2RGjZNjdQg2RqpQbE1UsMerJEa9FojNcj1gtSg1gvXt16ZC1KDVi9IDVK9IDUo9cIVDkJtuMRBpw3XONRFg+Ck0sZYbynSBsFBow2Ck0RbAW58za7dYZjWaJthoF7EtsJAnfC2w0Cd73bGQF0WHTODSzsDW+N0zA027RgcdNoxOfi0Y3QQ6pXZwahXZgelXpkdnHpldtg8V2YHq16ZHbTaMztsyJ7ZQaw9s4NZe2YHtfZGxes16pkd5DowO9h1YHbQ62DUPPh1MIoeBDsYVQ9FMjA+KXa01l46dmR8kOzI+GTZUeDjlwXHDoK0YccZwvQyTmsI09medhCmMz1lEKYrYiJO8OqEqABBrODUmWDBqDPRgk9nwgWbzsQLLp2JF0w6Ey949Ea8sEFuxAsOvREvGPRGvLDbbsQL9rwRL7jzTrxgzjtWs16PO/GCNe/EC868Ey8Y8471DL78xIIGW35iRUMpfBIymfKT11h68pOQwZKfhEyOfPxFNoYWP3b+v8uLio/M/3edq0flR+j1eXR+BCjpMYsQGEe0Eig0aGwlcWD80kog0XixlYCiyWIrgUVDxVaCi+aJrQUXjRJbCy6aIraWS0XvJbhodthacNHYsLXgoolhgeCiYWGB4KI5YYHgopFageCi6WCB4KLBYIGsQ5oJFspCpCoLd7KiKUiWIg0BC2Ut0vyvUBYjjf4KZTXS1K9ILpse+BVJNhgJGQm0hWmQkQBcGAQZSZXQDMhIL6Ie/7gRmDT5cSM4jaGP7t6NOfDRXbYxhz26+zULgx7drZqFIY/uKs3SgEd3eWZpuONWUpFvtwoMqnwr2ci4WwlHyt1JOnLuTtKRdHeSjqy7k3Sk3Z1aOXo7SUfi3Us6Mu9e0pF695KO3LuXdCTfvaQjje0lHen3IOnIvwdVmSTggypNKruD5EMFH1RxkoMPqjpJwrEqT7JwrOqTNByrJdSOjRUhiDiWgAsmjiXmgooTZRpycQILqmWcSFiycSJpDR0nr5+h739v9yojJ7MOUlJO1zoIKjvd6TCojjTTYWTntII4qJAUOMnRKaHCTsiAlkydAS7JOgNe8nUGvKTsDHjJ2hnwkrhzWl143xx4Sd858JLBc+AliefASx7PgZdUfgReMuIReEnoR+Alpx+pnknrRypoqtQjEKPcT1TS5PcT1TQp/kRFTZY/UVWT6E+0zFrjJ2IG3ReAvGD8AsAXpF+Qw8j7BS+6Vn8B+GT/AviNBvC6Q1G6r3eoBvC6PvEKUg3gdXHiFQQ74XVn4hUGtfO6NPEKowbwujTxKw4qpwJOagAVocJuqYCWGkAFuNQAKuClBlABLzWAM/BSAzgDLzWAM60uvS/wUgM4Ay81gDPwUgOogZcaQA281ABq4CVr1sBLDaAGXmoANdUzNYALFTRV6gWIsQFcqKSpAVyopqkBXKioqQFcqKqpATS0zFrsDTFDA2gAeaEBNAC+0AAachg1gIYXXTeAFvCpAbTAbzSA9neXMn8p01YQpVpA20EUbIZ2hjion24NcdQFuh0FQv10REt9oENg2DUdMVMn6AiaWsGVqKkXXImamsGVqKkbXIma2sEVV5remqipIfRETR2hJ2pqCT1RU0/oiZqaQk/UpNKeqKktDERNfWHACqfGMGCJU+kOxI2tYcAip94wYJVTcxixzKk7jFjn1B5GXHLt/RHJoUGMBL7QIUbCX2gRExqOesRkFIBuEhMlgbrERFkw2sT0u5eZbWKaIUq1iXkNUbA55h3EQSXNGcRRm5grCoQ6momW2sSMwLCDbsRMbeJG0NQmbkRNbeJG1NQmbkRNbeJG1NQm7rjS8NZ3oqY2cSdqahN3oqY2cSdqahN3oqY28UnUpNVPoqY28UnU1CY+scKpTXxiiVPpfhI3tokHFjm1iQdWObWJB5Y5tYkH1jm1iQcuubb/A8l1mwhWBG63iWBF+HabCFZoOGgTwcooANUmghUlgaY0rSgL3CYCdz/j7+RNc+icu6UhI2F+k7utIWNhOpK7tSFjYUySu70hY2FekrvFIWNhcFJgZYEmPgVmIoAusDJBU6ACKxU0DyqwckGToQIrGTTMLrSyQUPtQisbNNwutLJBQ+5CKxs0CC20skFD70IrGzT8LrKyQZPWIisbNAwvsrJBQ/EiKxs0HC8y9wmsYGRlg4blbaxs0NC8jZUNGp63MXcKDdHbmFuFhultzL1CtbSxEoLD9bZ2fai2s7USQhrfWgnBoXtbmRBj+N5WpsIcwreVaTCH8e1kCsyhfDuZAHM4307Sm0P6dkxO6t4Z8MTE9KTtPeOTtPfMT8recwJI2HvOAOl6zxkgWe85A6TqA2eANteBM0CaPnAGSNIHzgDt1wNngAR94AyQnmPOAMk5NvYArFbMGSAxx5wB0nLMGSApx8YuICUnxjYgISfGPqCKSTgJKOPEqgOl4oSTQCJOOAmo4VQmwfh2ZJDKDJjfjwxSmQDzG5JBKvnN70gGqUyA+S3JIJUJML8nGWQGP9k4s1IAYJmRA/JxZiSBhJwZWSAjZ0YaSMm5kQdycm7kgaScG3kgK+dGHmiT5UYeyMu5kQcS89HIA23eo5EHUvPRyAO5+WjkgeR8tHYFrNvRyAPp+WTkgfx8MvJAgj5Z+4IMfbI2Bin6ZO0MKp+TkQqUdGHWhLJ0YaSCNF0YqUBPFzIV+P3KoJBJML5hGRQyAcZ3LINSwhvfsgxKiW58zzIoJbfxTcugRGYyc8nYhIPcZOUKwcnJFZKTkStEJx9XyE42rpCdXFwhO5n4jOy0kc7IThY+Izs5+IzstDPPyE7+PSM72bdGdnJvzRUPa1QjO3m3Rnaybo3s5Nyaa56Me+GiJ99euOqpSC6Ij669GGuvTHtBfPLsBfHRso3AB8M2OxkCdm0yGQQL2FQyCLLcdDII8tvMMgiqoFVsZNJW48FHbxUfGbRVgGTPVhGSOVuFSNbsFCMZs1OMZMtOMZIpO8VIG6BTjGTITjGSHa+KkfbRVTGSFa+KkYx4VYxkw6uuVMj9VTGSBXvFSAbsFSPZr9e1SubrdbGS9XpdrbTgvcJE2w2wlsp0g8Ikyw0KEw3nruSY52buKs7CeZm7hLNwTuau3yycj7mLNwvnYu7KzcJ52CipSG2jAqNPLclIbJNEI69Nko20Nkk4stok6Uhqk6Qjp02SjpQ2Szoq8FnSkdBmSUc+myUdbZRZ0pHNZklHMrtJOnLZTdUlZPwm6chkN0lHIrtJOvLYTVUmaeyuSpMsdle1SWt8l4DosLteP6WwuwQkg90lIArM3X0xzovclRfznMjddTHPh9wlF/NcyF1uMc+D3KUW8xzo4ZOQsh4CBj7rw6chXT18HJLVw+chVT18IJp+uPKJaOzhyieieYcrn4gGHa58Ihpet/KJaLThyieimYZrn4hG3619IppiuPaJaHzh2ieiuYVrUXOQ3bVPRJMKA5+IRhQGPhHNJgxE1dFQwkCUHU0jDETd0UoGPhTOHwzlOqnBg6EPRRMHQx8KRw26Sx7GOUnoLnaY5yOhu85hnouE7hKHeR4Suqsb5jlI6C5smOcfYSR4aExrJJHoAwsmGs26EVA0lHUjqGgc60ZgkYo2gotctBFcJKON4CIbbQUXFfFWcJGPtoKLhLQVXLQZtoKLlLQVXOSkneAiKe1kFUKed4KLtLQTXOSlneAiMe1kHZKZ9rIQSU17WYm0rHuBhnLaqzVTdtoLNNLTXqChn9zNBjwfCN1tBuNcIHR3GIzzgNDdXDDOAUJ3X8H4/X/obikYv/cPY4+BjBT7GPAxY4+DbBR7IOSi2CMhE8UeCnko8VjIQonHQg5KPBYyUOKxUKEmHgvZJ/FYyD2px0KVnnos5J3UYyHrpB4LOSf1Kwxymnos5JvMYyHbZB4LuSbza4xMk/lFRp7J/Cqjxcs8HHRMLtZGGSb3cMgvuYeDdhGzSUAwYiQJOkbMIkHNiCEkaBoxfQRlI8aOoG+OkoqUc1Rg9KklGYnnJNHIPSfJRvo5STgy0EnSkYROko48dJJ0pKJC0lFBF5KOhFRIOnJSIelocxSSjsxUSDqSUynpyE+lqkvIeCnpyFKlpCNRlZKOXFWqyiRdVao0yViVqk1a40oCorcqvX5KXZUEJHtVEhAF5g62Hx9lk+GweHei7ULUvHh3lO1C1Mh4d4btQuhDu/Pr18dZrZRT3dn1r6hARdUabRXqKEX3XGIdpQDXq42OUozr1VZHAeNORwHjXkW54+lTTD/duiPp73+GzuMOor8DYC+54+fvAKh9d+z8HQBl706bvwNgJzYeA7WaxseAj9l4HNRkGg+EOkzjkVB7aTwU6i2tx0KNpfVYqKu0Hgu1lNZjIde0Hgs1k9ZjoU7SeSzkqs5joR7SeSzUQDqPhbpH51cY5LTzWKhvXD0WahpXj4U6xtWvMWoXV7/IqFdc/Sqjxbt6ONglerE2qkX0Hg6ptvdwsDm4I+A/Y1+LvmzOYBl3BOyFgW3cIbAXCIvhjoG9QMimOwr2AiGn7jTYC4RVHpCZrDQwNuEgN1lqRHCy1YjkZK0R0cleI7KTxUZkJ5uNyE5Wm5CdNsiE7GS5CdnJdhOy096bkJ3sNyE7WXBGdrLhzBUPazQjO9lxRnay5IzsZMuZa56seeOiJ3veuOqpSG6Ijza9GWuvrHpDfLLrDfHRsvff+PDz933n/bv64fueef+ufvK+e3S3/kv3Tfv1vyqy05EYN3PcR5/PeT/IEduhO6LOyqGr48+v91eDuEN3UO2ikrpNzyosk2Ffn0JFVTKqbL6mf39gcGcE8weYZfSpL+WM8PChmP+8popzf8W9KMf843uGuLU+7mh7zO/jR/vM9bFub//5J6/rshvKQcVXv+Pjujw9/zPw6yxPBXYQ+P1bdRU5QyQOeY/c4ffv0GoaxvL4qWL/ZmEuhzIp63J8Juz7/9cyY5E7Dv8dW5RZpoauRyuv9LOyz9OxbL/YWvnXGaJVZ8SmbT1d9EvPi+HGVojc+flPIl7T4/+IYox7mfPIHairZzjx7nSd3yNXA+0jd9iunhjGPh9T+UcvInf0rh5I4iGHOo/cSbx+i6+S/4j7dtIfLDDT9eepJB9vuV731194aIfyz7LEyfBcmFF9rtffd3Chx/Ke609Sqbg+r+OxnPVLdir0+eHTs6r61x91+BX4fMlUBrrT/DapnnX2cSy/Fv+ZirhU7O5c34+ddZ244/22z/Je/2AfubP9nwDZmiJ3tt8+V+N7H0IvjNzxvotS7+SO918h/6vezR3w/wqS3S5yR/y/gjYqqNJBOxWk4H4+0X//H6DLS4ig6gUA\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/components/layout/Checkbox.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/layout/Checkbox.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmpxeDA5YTEgewogIHRvcDogLTI0cHg7Cn0KLmpxeDA5YTFbdHlwZT0iY2hlY2tib3giXSB7CiAgY2xpcDogcmVjdCgwIDAgMCAwKTsKICBjbGlwLXBhdGg6IGluc2V0KDUwJSk7CiAgaGVpZ2h0OiAxcHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICB3aWR0aDogMXB4Owp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var input = 'jqx09a1 rgw6ez422';\nexport var checkbox = 'rgw6ez3yk rgw6ezo2 rgw6ez6ay rgw6ez16k rgw6ez108 rgw6ez6ai rgw6ez6jm';\nexport var checkMark = 'rgw6ez3xw rgw6ez16k rgw6ez108 rgw6ez4aw';\nexport var checkMarkActive = 'rgw6ez3yk rgw6ez4aw rgw6ez422 rgw6ez38w rgw6ez33k';","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/components/sell/select/SelectPage.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/sell/select/SelectPage.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xMzJibjkxIHsKICBtYXgtd2lkdGg6IDEwMDBweDsKICBtYXJnaW46IDAgYXV0bzsKfQouXzEzMmJuOTMgewogIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXJndzZlem8pOwp9Ci5fMTMyYm45NCB7CiAgbWFyZ2luLWJvdHRvbTogLTNweDsKfQouXzEzMmJuOTYgewogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgbWF4LXdpZHRoOiAxODBweDsKfQouXzEzMmJuOTcgewogIGhlaWdodDogMTJweDsKICB3aWR0aDogMTJweDsKICBtYXJnaW4tbGVmdDogMnB4OwogIG1hcmdpbi1ib3R0b206IC0ycHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQouXzEzMmJuOTggewogIHdpZHRoOiAxOTBweDsKfQouXzEzMmJuOTkgewogIGJveC1zaGFkb3c6IHZhcigtLXJndzZlenEpOwp9Ci5fMTMyYm45YSB7CiAgYm94LXNoYWRvdzogMCAxNHB4IDE2cHggMCByZ2JhKDcwLCAxMTUsIDI1MCwgMC40KTsKfQouXzEzMmJuOWIgewogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgbWF4LXdpZHRoOiAxMDBweDsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICBvdmVyZmxvdzogaGlkZGVuOwp9\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var section = '_132bn91 rgw6ez27w rgw6ez26g rgw6ez2de rgw6ez2by';\nexport var filterRowIcon = 'rgw6ez462 rgw6ez49x';\nexport var buttonSelected = '_132bn93';\nexport var ethIcon = '_132bn94';\nexport var collectionName = '_132bn96 rgw6ezc2 rgw6ez6km rgw6ez2d8';\nexport var verifiedBadge = '_132bn97';\nexport var dropDown = '_132bn98';\nexport var activeDropDown = '_132bn99';\nexport var activeDropDownItems = '_132bn9a';\nexport var collectionFilterBubbleText = '_132bn9b';","import { AnimatedBox, Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { XMarkIcon } from 'nft/components/icons'\nimport { Checkbox } from 'nft/components/layout/Checkbox'\nimport { buttonTextSmall, headlineSmall } from 'nft/css/common.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { useFiltersExpanded, useIsMobile, useWalletCollections } from 'nft/hooks'\nimport { WalletCollection } from 'nft/types'\nimport { Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useReducer, useState } from 'react'\nimport { useSpring } from 'react-spring/web'\n\nimport * as styles from './SelectPage.css'\n\nexport const FilterSidebar = ({ SortDropdown }: { SortDropdown: () => JSX.Element }) => {\n  const collectionFilters = useWalletCollections((state) => state.collectionFilters)\n  const setCollectionFilters = useWalletCollections((state) => state.setCollectionFilters)\n\n  const walletCollections = useWalletCollections((state) => state.walletCollections)\n  const listFilter = useWalletCollections((state) => state.listFilter)\n  const setListFilter = useWalletCollections((state) => state.setListFilter)\n\n  const [isFiltersExpanded, setFiltersExpanded] = useFiltersExpanded()\n  const isMobile = useIsMobile()\n\n  const { sidebarX } = useSpring({\n    sidebarX: isFiltersExpanded ? 0 : -360,\n  })\n  return (\n    // @ts-ignore\n    <AnimatedBox\n      position={{ sm: 'fixed', md: 'sticky' }}\n      top={{ sm: '40', md: 'unset' }}\n      left={{ sm: '0', md: 'unset' }}\n      width={{ sm: 'full', md: 'auto' }}\n      height={{ sm: 'full', md: 'auto' }}\n      zIndex={{ sm: '3', md: 'auto' }}\n      display={isFiltersExpanded ? 'flex' : 'none'}\n      style={{ transform: sidebarX.interpolate((x) => `translateX(${x}px)`) }}\n    >\n      <Box\n        paddingTop={{ sm: '24', md: '0' }}\n        paddingLeft={{ sm: '16', md: '0' }}\n        paddingRight=\"16\"\n        width={{ sm: 'full', md: 'auto' }}\n      >\n        <Row width=\"full\" justifyContent=\"space-between\">\n          <Row as=\"span\" className={headlineSmall} color=\"blackBlue\">\n            Filters\n          </Row>\n          {isMobile && (\n            <Box\n              as=\"button\"\n              border=\"none\"\n              backgroundColor=\"transparent\"\n              color=\"darkGray\"\n              onClick={() => setFiltersExpanded(false)}\n            >\n              <XMarkIcon fill={themeVars.colors.blackBlue} />\n            </Box>\n          )}\n        </Row>\n        <Row marginTop=\"14\" marginLeft=\"2\" gap=\"6\" flexWrap=\"wrap\" width=\"276\">\n          <ListStatusFilterButtons listFilter={listFilter} setListFilter={setListFilter} />\n        </Row>\n        {isMobile && (\n          <Box paddingTop=\"20\">\n            <SortDropdown />\n          </Box>\n        )}\n        <CollectionSelect\n          collections={walletCollections}\n          collectionFilters={collectionFilters}\n          setCollectionFilters={setCollectionFilters}\n        />\n      </Box>\n    </AnimatedBox>\n  )\n}\n\nconst CollectionSelect = ({\n  collections,\n  collectionFilters,\n  setCollectionFilters,\n}: {\n  collections: WalletCollection[]\n  collectionFilters: Array<string>\n  setCollectionFilters: (address: string) => void\n}) => {\n  const [collectionSearchText, setCollectionSearchText] = useState('')\n  const [displayCollections, setDisplayCollections] = useState(collections)\n\n  useEffect(() => {\n    if (collectionSearchText) {\n      const filtered = collections.filter((collection) =>\n        collection.name?.toLowerCase().includes(collectionSearchText.toLowerCase())\n      )\n      setDisplayCollections(filtered)\n    } else {\n      setDisplayCollections(collections)\n    }\n  }, [collectionSearchText, collections])\n\n  return (\n    <>\n      <Box className={headlineSmall} marginTop=\"20\" marginBottom=\"12\">\n        Collections\n      </Box>\n      <Box paddingBottom=\"12\" paddingTop=\"0\" borderRadius=\"8\">\n        <Column as=\"ul\" paddingLeft=\"0\" gap=\"10\" style={{ maxHeight: '508px' }}>\n          <CollectionFilterSearch\n            collectionSearchText={collectionSearchText}\n            setCollectionSearchText={setCollectionSearchText}\n          />\n          <Box\n            background=\"lightGray\"\n            borderRadius=\"12\"\n            paddingTop=\"8\"\n            paddingBottom=\"8\"\n            overflowY=\"scroll\"\n            style={{ scrollbarWidth: 'none' }}\n          >\n            {displayCollections?.map((collection, index) => (\n              <CollectionItem\n                key={index}\n                collection={collection}\n                collectionFilters={collectionFilters}\n                setCollectionFilters={setCollectionFilters}\n              />\n            ))}\n          </Box>\n        </Column>\n      </Box>\n    </>\n  )\n}\n\nconst CollectionFilterSearch = ({\n  collectionSearchText,\n  setCollectionSearchText,\n}: {\n  collectionSearchText: string\n  setCollectionSearchText: Dispatch<SetStateAction<string>>\n}) => {\n  return (\n    <Box\n      as=\"input\"\n      borderColor={{ default: 'medGray', focus: 'genieBlue' }}\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderRadius=\"8\"\n      padding=\"12\"\n      marginLeft=\"0\"\n      marginBottom=\"24\"\n      backgroundColor=\"white\"\n      fontSize=\"14\"\n      color={{ placeholder: 'darkGray', default: 'blackBlue' }}\n      placeholder=\"Search collections\"\n      value={collectionSearchText}\n      onChange={(e: FormEvent<HTMLInputElement>) => setCollectionSearchText(e.currentTarget.value)}\n    />\n  )\n}\n\nconst CollectionItem = ({\n  collection,\n  collectionFilters,\n  setCollectionFilters,\n}: {\n  collection: WalletCollection\n  collectionFilters: Array<string>\n  setCollectionFilters: (address: string) => void\n}) => {\n  const [isCheckboxSelected, setCheckboxSelected] = useState(false)\n  const [hovered, toggleHovered] = useReducer((state) => {\n    return !state\n  }, false)\n  const isChecked = useCallback(\n    (address: string) => {\n      return collectionFilters.some((collection) => collection === address)\n    },\n    [collectionFilters]\n  )\n  const handleCheckbox = () => {\n    setCheckboxSelected(!isCheckboxSelected)\n    setCollectionFilters(collection.address)\n  }\n  return (\n    <Row\n      cursor=\"pointer\"\n      paddingRight=\"14\"\n      height=\"44\"\n      as=\"li\"\n      background={hovered ? 'medGray' : undefined}\n      onMouseEnter={toggleHovered}\n      onMouseLeave={toggleHovered}\n      onClick={handleCheckbox}\n    >\n      <Box as=\"img\" borderRadius=\"round\" marginLeft=\"16\" width=\"20\" height=\"20\" src={collection.image} />\n      <Box as=\"span\" marginLeft=\"6\" marginRight=\"auto\" className={styles.collectionName}>\n        {collection.name}{' '}\n      </Box>\n      <Checkbox checked={isChecked(collection.address)} hovered={hovered} onChange={handleCheckbox}>\n        <Box as=\"span\" color=\"darkGray\" marginRight=\"12\" marginLeft=\"auto\">\n          {collection.count}\n        </Box>\n      </Checkbox>\n    </Row>\n  )\n}\n\nconst statusArray = ['All', 'Unlisted', 'Listed']\n\nconst ListStatusFilterButtons = ({\n  listFilter,\n  setListFilter,\n}: {\n  listFilter: string\n  setListFilter: (value: string) => void\n}) => {\n  return (\n    <>\n      {statusArray.map((value, index) => (\n        <Row\n          key={index}\n          borderRadius=\"12\"\n          backgroundColor=\"medGray\"\n          height=\"44\"\n          className={value === listFilter ? styles.buttonSelected : null}\n          onClick={() => setListFilter(value)}\n          width=\"max\"\n          padding=\"14\"\n          cursor=\"pointer\"\n        >\n          <Box className={buttonTextSmall}>{value}</Box>\n        </Row>\n      ))}\n    </>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Box } from 'nft/components/Box'\nimport { Center, Column, Row } from 'nft/components/Flex'\nimport { ChevronLeftIcon, XMarkIcon } from 'nft/components/icons'\nimport { ListPage } from 'nft/components/sell/list/ListPage'\nimport { SelectPage } from 'nft/components/sell/select/SelectPage'\nimport { buttonMedium, header2, headlineSmall } from 'nft/css/common.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { useBag, useNFTList, useSellAsset, useSellPageState, useWalletCollections } from 'nft/hooks'\nimport { ListingStatus, SellPageStateType } from 'nft/types'\nimport { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useToggleWalletModal } from 'state/application/hooks'\n\nimport * as styles from './sell.css'\n\nconst SHOPPING_BAG_WIDTH = 324\n\nconst Sell = () => {\n  const sellPageState = useSellPageState((state) => state.state)\n  const setSellPageState = useSellPageState((state) => state.setSellPageState)\n  const removeAllMarketplaceWarnings = useSellAsset((state) => state.removeAllMarketplaceWarnings)\n  const resetSellAssets = useSellAsset((state) => state.reset)\n  const clearCollectionFilters = useWalletCollections((state) => state.clearCollectionFilters)\n  const setListingStatus = useNFTList((state) => state.setListingStatus)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    removeAllMarketplaceWarnings()\n    setListingStatus(ListingStatus.DEFINED)\n  }, [removeAllMarketplaceWarnings, sellPageState, setListingStatus])\n\n  const { account } = useWeb3React()\n  const toggleWalletModal = useToggleWalletModal()\n\n  useEffect(() => {\n    resetSellAssets()\n    setSellPageState(SellPageStateType.SELECTING)\n    clearCollectionFilters()\n  }, [account, resetSellAssets, setSellPageState, clearCollectionFilters])\n  const cartExpanded = useBag((state) => state.bagExpanded)\n\n  const exitSellFlow = () => {\n    navigate(-1)\n  }\n\n  return (\n    <Box className={styles.mobileSellWrapper}>\n      {/* <Head> TODO: figure out metadata tagging\n          <title>Genie | Sell</title>\n        </Head> */}\n      <Row className={styles.mobileSellHeader}>\n        {sellPageState === SellPageStateType.LISTING && (\n          <Box marginRight=\"4\" onClick={() => setSellPageState(SellPageStateType.SELECTING)}>\n            <ChevronLeftIcon height={28} width={28} />\n          </Box>\n        )}\n        <Box className={headlineSmall} paddingBottom=\"4\" style={{ lineHeight: '28px' }}>\n          {sellPageState === SellPageStateType.SELECTING ? 'Select NFTs' : 'Create Listing'}\n        </Box>\n        <Box cursor=\"pointer\" marginLeft=\"auto\" marginRight=\"0\" onClick={exitSellFlow}>\n          <XMarkIcon height={28} width={28} fill={themeVars.colors.blackBlue} />\n        </Box>\n      </Row>\n      {account != null ? (\n        <Box style={{ width: `calc(100% - ${cartExpanded ? SHOPPING_BAG_WIDTH : 0}px)` }}>\n          {sellPageState === SellPageStateType.SELECTING ? <SelectPage /> : <ListPage />}\n        </Box>\n      ) : (\n        <Column as=\"section\" gap=\"60\" className={styles.section}>\n          <div style={{ minHeight: '70vh' }}>\n            <Center className={styles.notConnected} flexDirection=\"column\">\n              <Box as=\"span\" className={header2} color=\"darkGray\" marginBottom=\"24\" display=\"block\">\n                No items to display\n              </Box>\n              <Box as=\"button\" className={buttonMedium} onClick={toggleWalletModal}>\n                Connect Wallet\n              </Box>\n            </Center>\n          </div>\n        </Column>\n      )}\n    </Box>\n  )\n}\n\nexport default Sell\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/pages/sell/sell.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/pages/sell/sell.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll80YWwzdnAxIHsKICBtYXgtd2lkdGg6IDEwMDBweDsKICBtYXJnaW46IDAgYXV0bzsKfQouXzRhbDN2cDIgewogIGhlaWdodDogNzB2aDsKfQouXzRhbDN2cDQgewogIHNjcm9sbGJhci13aWR0aDogbm9uZTsKfQouXzRhbDN2cDYgewogIGhlaWdodDogNzJweDsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var NAVBAR_HEIGHT = '72px';\nexport var section = '_4al3vp1 rgw6ez27w rgw6ez26g rgw6ez2de rgw6ez2by';\nexport var notConnected = '_4al3vp2';\nexport var mobileSellWrapper = '_4al3vp4 rgw6ez428 rgw6ez42r rgw6ez38w rgw6ez3e9 rgw6ez3k8 rgw6ez3kf rgw6ez1ae rgw6ez1b9 rgw6ez142 rgw6ez6ly';\nexport var mobileSellHeader = '_4al3vp6 rgw6ez27w rgw6ez2de rgw6ez2je rgw6ez22w rgw6ez3y8 rgw6ez3xx';"],"sourceRoot":""}